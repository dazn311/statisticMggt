[{"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/index.js":"1","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/reportWebVitals.js":"2","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/App.js":"3","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/header/header.component.jsx":"4","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/list-points/list-points.component.jsx":"5","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.actions.js":"6","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.types.js":"7","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/index.js":"8","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/store.js":"9","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/root-reducer.js":"10","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.reducer.js":"11","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.data.js":"12","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.selectors.js":"13","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/detailPanelTrest/DetailListPoints.component.jsx":"14","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/detailLineItem/detailLineItem.component.jsx":"15","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/search-elem/Search-elem.component.jsx":"16","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.reducer.js":"17","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.types.js":"18","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.actions.js":"19","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.selectors.js":"20","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/form-signIn/form-signIn.component.jsx":"21","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/form-signUp/form-signUp.component.jsx":"22","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/blockOGH/BlockOGH.component.jsx":"23","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/homeIcon/homeIcon.component.jsx":"24","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Dashboard.js":"25","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Chart.js":"26","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/listItems.js":"27","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Orders.js":"28","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Deposits.js":"29","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Title.js":"30","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/LineChartWithXAxisPading.js":"31","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/History-obj-last.js":"32","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/auth-dashboard/AuthDashboard.js":"33","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/auth/auth.component.js":"34","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/index.js":"35","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/changeLog/ChangeLog.component.jsx":"36","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/HistoryChanges.js":"37","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/LineChartWithXAxisPading.js":"38","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/listItems.js":"39","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/History-obj-last.js":"40","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/index.js":"41","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/NewsList.js":"42","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/Users.js":"43","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/Title.js":"44","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/index.js":"45","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/HistoryChanges.js":"46","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/History-obj-last.js":"47","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/listItems.js":"48","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/NewObj.js":"49","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/TableListHistories.sceen.js":"50","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/header/listItems.js":"51","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TabMenu.js":"52","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/tabTwoMenu.js":"53","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/SearchPanel.twoTab.js":"54","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/DatePicker.twoTab.js":"55","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/DatePickerEnd.twoTab.js":"56","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/LineChartWithXAxisPading.twoTab.js":"57","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/Title.twoTab.js":"58","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/tabOneMenu.js":"59","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/DatePicker.js":"60","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/DatePickerEnd.js":"61","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/SearchPanel.js":"62","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/TabOGH.js":"63","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/Title.js":"64","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/StatisticChartOfPeriod.twoTab.js":"65","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/StatisticPage.selectors.js":"66","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/DatePickerOne.secondTab.js":"67"},{"size":511,"mtime":1613342396796,"results":"68","hashOfConfig":"69"},{"size":362,"mtime":1611207164073,"results":"70","hashOfConfig":"69"},{"size":773,"mtime":1613497624270,"results":"71","hashOfConfig":"69"},{"size":5530,"mtime":1613341948128,"results":"72","hashOfConfig":"69"},{"size":1356,"mtime":1611955475507,"results":"73","hashOfConfig":"69"},{"size":15316,"mtime":1613648660316,"results":"74","hashOfConfig":"69"},{"size":2773,"mtime":1613479727929,"results":"75","hashOfConfig":"69"},{"size":117,"mtime":1612493621314,"results":"76","hashOfConfig":"69"},{"size":811,"mtime":1612954643014,"results":"77","hashOfConfig":"69"},{"size":496,"mtime":1612492266740,"results":"78","hashOfConfig":"69"},{"size":6568,"mtime":1613484385025,"results":"79","hashOfConfig":"69"},{"size":14194,"mtime":1613485442949,"results":"80","hashOfConfig":"69"},{"size":4501,"mtime":1613482560344,"results":"81","hashOfConfig":"69"},{"size":3297,"mtime":1611955966503,"results":"82","hashOfConfig":"69"},{"size":561,"mtime":1611955823191,"results":"83","hashOfConfig":"69"},{"size":1031,"mtime":1611927659450,"results":"84","hashOfConfig":"69"},{"size":433,"mtime":1611822225613,"results":"85","hashOfConfig":"69"},{"size":75,"mtime":1611651313483,"results":"86","hashOfConfig":"69"},{"size":152,"mtime":1611651313478,"results":"87","hashOfConfig":"69"},{"size":176,"mtime":1611816705678,"results":"88","hashOfConfig":"69"},{"size":4298,"mtime":1612958948662,"results":"89","hashOfConfig":"90"},{"size":4516,"mtime":1612184235649,"results":"91","hashOfConfig":"90"},{"size":4045,"mtime":1611838487527,"results":"92","hashOfConfig":"69"},{"size":262,"mtime":1611927667155,"results":"93","hashOfConfig":"69"},{"size":11310,"mtime":1613647827365,"results":"94","hashOfConfig":"69"},{"size":1473,"mtime":1611958553657,"results":"95","hashOfConfig":"69"},{"size":2077,"mtime":1612167067089,"results":"96","hashOfConfig":"69"},{"size":2351,"mtime":1611692672000,"results":"97","hashOfConfig":"69"},{"size":2678,"mtime":1612834707287,"results":"98","hashOfConfig":"69"},{"size":343,"mtime":1611692672000,"results":"99","hashOfConfig":"69"},{"size":12408,"mtime":1613673707401,"results":"100","hashOfConfig":"69"},{"size":2862,"mtime":1612884417477,"results":"101","hashOfConfig":"69"},{"size":3935,"mtime":1612957170654,"results":"102","hashOfConfig":"90"},{"size":2983,"mtime":1612960771957,"results":"103","hashOfConfig":"90"},{"size":241,"mtime":1612962350163,"results":"104","hashOfConfig":"69"},{"size":2245,"mtime":1612355658352,"results":"105","hashOfConfig":"69"},{"size":2720,"mtime":1613042008058,"results":"106","hashOfConfig":"69"},{"size":7535,"mtime":1613378487329,"results":"107","hashOfConfig":"69"},{"size":2077,"mtime":1612167067089,"results":"108","hashOfConfig":"69"},{"size":2972,"mtime":1612185933689,"results":"109","hashOfConfig":"69"},{"size":567,"mtime":1613038804512,"results":"110","hashOfConfig":"69"},{"size":3977,"mtime":1612463577535,"results":"111","hashOfConfig":"69"},{"size":1452,"mtime":1612464065788,"results":"112","hashOfConfig":"69"},{"size":343,"mtime":1612464025830,"results":"113","hashOfConfig":"69"},{"size":1133,"mtime":1612468038554,"results":"114","hashOfConfig":"69"},{"size":5994,"mtime":1612464025824,"results":"115","hashOfConfig":"69"},{"size":2972,"mtime":1612464025823,"results":"116","hashOfConfig":"69"},{"size":2077,"mtime":1612464025833,"results":"117","hashOfConfig":"69"},{"size":2667,"mtime":1612947914425,"results":"118","hashOfConfig":"69"},{"size":3411,"mtime":1613341986449,"results":"119","hashOfConfig":"69"},{"size":2604,"mtime":1613336366906,"results":"120","hashOfConfig":"69"},{"size":3500,"mtime":1613496954783,"results":"121","hashOfConfig":"69"},{"size":14256,"mtime":1613675947037,"results":"122","hashOfConfig":"69"},{"size":2611,"mtime":1613379025613,"results":"123","hashOfConfig":"69"},{"size":1292,"mtime":1613675715627,"results":"124","hashOfConfig":"69"},{"size":1198,"mtime":1613419388289,"results":"125","hashOfConfig":"69"},{"size":3127,"mtime":1613462272857,"results":"126","hashOfConfig":"69"},{"size":343,"mtime":1613379701720,"results":"127","hashOfConfig":"69"},{"size":1644,"mtime":1613381291015,"results":"128","hashOfConfig":"69"},{"size":2411,"mtime":1613387067038,"results":"129","hashOfConfig":"69"},{"size":2298,"mtime":1613381582668,"results":"130","hashOfConfig":"69"},{"size":2851,"mtime":1613381201296,"results":"131","hashOfConfig":"69"},{"size":5102,"mtime":1613456880653,"results":"132","hashOfConfig":"69"},{"size":343,"mtime":1613381284538,"results":"133","hashOfConfig":"69"},{"size":1289,"mtime":1613379720424,"results":"134","hashOfConfig":"69"},{"size":1752,"mtime":1613471430040,"results":"135","hashOfConfig":"69"},{"size":1627,"mtime":1613675890661,"results":"136","hashOfConfig":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"e8260c",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a0oy8g",{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"139"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"139"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/index.js",[],["280","281"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/reportWebVitals.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/App.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/header/header.component.jsx",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/list-points/list-points.component.jsx",[],["282","283"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.actions.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.types.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/index.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/store.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/root-reducer.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.reducer.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.data.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/adminPanelTrest.selectors.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/detailPanelTrest/DetailListPoints.component.jsx",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/detailLineItem/detailLineItem.component.jsx",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/search-elem/Search-elem.component.jsx",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.reducer.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.types.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.actions.js",[],["284","285"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/user/user.selectors.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/form-signIn/form-signIn.component.jsx",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/form-signUp/form-signUp.component.jsx",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/blockOGH/BlockOGH.component.jsx",[],["286","287"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/homeIcon/homeIcon.component.jsx",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Dashboard.js",["288","289"],"import React,{useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport { createStructuredSelector } from 'reselect';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\n// import List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\n// import Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\n// import NotificationsIcon from '@material-ui/icons/Notifications';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\n// import { mainListItems, secondaryListItems } from './listItems';\n\n// import HistoryObjLast from './History-obj-last';\n// import NewsList from './NewsList';\n// import ChangeLog from '../../components/changeLog/ChangeLog.component';\nimport LineChartWithXAxisPading from './LineChartWithXAxisPading';\nimport Deposits from './Deposits';\nimport NewObj from './NewObj';\nimport Header from '../../components/header/header.component';\n\nimport TableList from './TableListHistories.sceen';\n\nimport { selectIsFetchingUserOnline } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \nimport { fetchAmountUsersForGraphicsAsync, fetchEventsPointShortAsync, fetchAmountNewEventsForGraphicAsync,fetchAmountOGHForDashboardAsync ,fetchAmountOGHToDayAsync,fetchAmountOGHToWeekAsync, fetchAmountOGHToThreeDaysAsync,fetchAmountEndEventsForGraphicAsync, fetchAmountUsersOfStartDayGraphicsAsync, fetchAmountUsersOfEndDayGraphicsAsync} from '../../store/adminPanelTrest/adminPanelTrest.actions'; \n \nimport './dashboard.styles.scss';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mggt.ru/\">\n        МосГеоТрест\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },news: {\n    '&:hover': {\n      background: \"#f00\",\n   },\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n \nconst Dashboard = ({fetchDataUsersOnline, fetchEventsPointShort, fetchAmountNewEventsForGraphic, currentUser, isFetchingUserOnline, fetchAmountOGH,fetchAmountOGHToDay,fetchAmountOGHToWeek, fetchAmountOGHToThreeDays,fetchAmountEndEventsForGraphic,fetchAmountUsersOfStartDay, fetchAmountUsersOfEndDay}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('recents');\n  const [lineHeader, setLineHeader] = React.useState('Текущая информация по событиям и пользователям');\n\n  // let lineHeader = 'Текущая информация по событиям и пользователям';\n  // console.log('isFetchingUserOnline', isFetchingUserOnline);\n\n\n  // const fetchDataForGraphics = () => {\n\n  //   const today = new Date();\n  //   const todayStartDay = today.toISOString().split('T')[0] + 'T00:00:00.000Z';\n  //   const todayStartDay2 = today.toISOString().split('T')[0] + '07:00:00.000Z';\n\n  //   const todayStart = today.toISOString().split('T')[0] + '08:00:00.000Z';\n  //   const todayEnd = today.toISOString().split('T')[0] + 'T17:00:00.000Z';\n\n  //   const todayEndDay = today.toISOString().split('T')[0] + 'T18:00:00.000Z';\n  //   const todayEndDay2 = today.toISOString().split('T')[0] + 'T23:00:00.000Z';\n\n  //   fetchAmountNewEventsForGraphic(todayStart,todayEnd);\n  //   fetchAmountEndEventsForGraphic(todayStart,todayEnd);\n\n  //   fetchDataUsersOnline(todayStart,todayEnd);\n  //   fetchAmountUsersOfStartDay(todayStartDay,todayStartDay2);\n  //   fetchAmountUsersOfEndDay(todayEndDay,todayEndDay2);\n\n  // }\n  //smgt\n  useEffect(() => {\n\n    fetchEventsPointShort(); // graphic new_rec\n\n    const today = new Date();\n    // const todayStartDay = today.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    // const todayStartDay2 = today.toISOString().split('T')[0] + 'T07:00:00.000Z';\n\n    // const todayStart = today.toISOString().split('T')[0] + 'T08:00:00.000Z';\n    // const todayEnd = today.toISOString().split('T')[0] + 'T19:00:00.000Z';\n\n    // const todayEndDay = today.toISOString().split('T')[0] + 'T20:00:00.000Z';\n    // const todayEndDay2 = today.toISOString().split('T')[0] + 'T23:00:00.000Z';\n\n    \n\n    // fetchDataUsersOnline(todayStart,todayEnd);\n    // fetchAmountUsersOfStartDay(todayStartDay,todayStartDay2);\n    // fetchAmountUsersOfEndDay(todayEndDay,todayEndDay2);\n\n    // const StartDay = today.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    // const EndDay = today.toISOString().split('T')[0] + 'T23:00:00.000Z';\n\n    // fetchAmountNewEventsForGraphic(StartDay,EndDay);\n    // fetchAmountEndEventsForGraphic(StartDay,EndDay);\n\n\n    // for \"Количество ОГХ\"\n    fetchAmountOGH();\n\n    // for \"Новые ОГХ\"\n    fetchAmountOGHToDay();\n    fetchAmountOGHToWeek(); \n    fetchAmountOGHToThreeDays();\n  }, [fetchAmountNewEventsForGraphic, fetchAmountEndEventsForGraphic])\n \n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    fetchAmountNewEventsForGraphic(); // graphic new event\n    fetchDataUsersOnline(); // graphic user on line\n    fetchEventsPointShort(); // graphic new_rec\n    fetchAmountEndEventsForGraphic(); // graphic end_rec\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const winWidth = window.innerWidth;\n  \n\n  if (winWidth < 400) {\n    let newHeader = 'Информация по событиям';\n      setLineHeader(newHeader);\n  }\n  // console.log('user',user);\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            \n            <Grid item xs={12} md={8} lg={6}>\n            \n              <Paper className={fixedHeightPaper}>\n                {/* <Chart /> */}\n                <h4 style={{ textAlign:'center', position:'relative', marginTop:'-15px', left: '0'}}>\n        {lineHeader}</h4>\n                <LineChartWithXAxisPading />\n              </Paper>\n            </Grid>\n            {/* Количество ОГХ */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits /> \n              </Paper>\n            </Grid>\n            {/* Последние новости */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <NewObj />  \n              </Paper>\n            </Grid>\n            {/* История последних изменений по объектам */}\n            {/* <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <HistoryObjLast />\n              </Paper>\n            </Grid> */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <TableList />\n              </Paper>\n            </Grid>\n          </Grid>\n          <BottomNavigation style={{display:'none'}} value={value} onChange={handleChange} className={classes.root}>\n            <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n            <BottomNavigationAction label=\"Новости\" value=\"favorites\" icon={<EventNoteIcon />} />\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n            <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n          </BottomNavigation>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  isFetchingUserOnline: selectIsFetchingUserOnline,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchEventsPointShort: () => dispatch(fetchEventsPointShortAsync()),\n    fetchDataUsersOnline: (startDate, endDate) => dispatch(fetchAmountUsersForGraphicsAsync(startDate, endDate)),// for graphics\n    fetchAmountUsersOfStartDay: (startDate, endDate) => dispatch(fetchAmountUsersOfStartDayGraphicsAsync(startDate, endDate)),\n    fetchAmountUsersOfEndDay: (startDate, endDate) => dispatch(fetchAmountUsersOfEndDayGraphicsAsync(startDate, endDate)),\n    fetchAmountNewEventsForGraphic: (startDate, endDate) => dispatch(fetchAmountNewEventsForGraphicAsync(startDate, endDate)),// for graphics\n    fetchAmountEndEventsForGraphic: (startDate, endDate) => dispatch(fetchAmountEndEventsForGraphicAsync(startDate, endDate)),// for graphics\n\n    fetchAmountOGH: () => dispatch(fetchAmountOGHForDashboardAsync()),\n\n    fetchAmountOGHToDay: () => dispatch(fetchAmountOGHToDayAsync()),\n    fetchAmountOGHToWeek: () => dispatch(fetchAmountOGHToWeekAsync()),\n    fetchAmountOGHToThreeDays: () => dispatch(fetchAmountOGHToThreeDaysAsync()),\n});\n \nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard);\n","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Chart.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/listItems.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Orders.js",[],["290","291"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Deposits.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/Title.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/LineChartWithXAxisPading.js",["292"],"import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { concat, reduce } from 'lodash'; \n\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport { selectCountUsersGraph, selectIsFetchingUserOnline, selectAmountEventGraph, selectAmountEndEventGraph, selectCountUsersOfStartDayGraph , selectCountUsersOfEndDayGraph } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \nimport { fetchAmountUsersForGraphicsAsync,fetchAmountNewEventsForGraphicAsync,fetchAmountEndEventsForGraphicAsync,fetchAmountUsersOfStartDayGraphicsAsync, fetchAmountUsersOfEndDayGraphicsAsync } from '../../store/adminPanelTrest/adminPanelTrest.actions'; \n\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend\n} from 'recharts';\n\n \n\nlet data = [\n  {\n    name: '(00-07)', Events: null, Users: null, Closed: null, amt: 3,\n  },\n  {\n    name: '08:00', Events: null, Users: null, Closed: null, amt: 3,\n  },\n  {\n    name: '09:00', Events: null, Users: null, Closed: null, amt: 3,\n  },\n  {\n    name: '10:00', Events: null, Users: null, Closed: null, amt: 4,\n  },\n  {\n    name: '11:00', Events: null, Users: null, Closed: null, amt: 40,\n  },\n  {\n    name: '12:00', Events: null, Users: null, Closed: null, amt: 14,\n  },{\n    name: '13:00', Events: null, Users: null, Closed: null, amt: 14,\n  },\n  {\n    name: '14:00', Events: null, Users: null, Closed: null, amt: 21,\n  },\n  {\n    name: '15:00', Events: null, Users: null, Closed: null, amt: 21,\n  },\n  {\n    name: '16:00', Events: null, Users: null, Closed: null, amt: 32,\n  },\n  {\n    name: '17:00', Events: null, Users: null, Closed: null, amt: 30,\n  },\n  {\n    name: '18:00', Events: null, Users: null, Closed: null, amt: 0,\n  },\n  {\n    name: '(19-23)', Events: null, Users: null, Closed: null, amt: 0,\n  },\n];\n\nclass LineChartWithXAxisPading extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/g03265a4/';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      date: new Date()\n    };\n    this.fetchAll = this.fetchAll.bind(this);\n    this.setOffset = this.setOffset.bind(this);\n  }\n\n  componentDidMount() {\n    // const { fetchCollectionsStartAsync } = this.props;\n    this.fetchAll();\n  }\n\n\n\n  setOffset(ofs) {\n    const dd = new Date();\n    const ofsss = ofs + this.state.offset;\n    dd.setDate(dd.getDate() + ofsss);\n\n    this.setState(({offset}) => ({\n      date: dd,\n      offset: offset + ofs\n    }))\n\n  }\n\n  fetchAll(ofss=0) {\n    const{fetchAmountUsersForGraphicsAsync,fetchAmountUsersOfStartDayGraphicsAsync,fetchAmountUsersOfEndDayGraphicsAsync, fetchAmountNewEventsForGraphicAsync,fetchAmountEndEventsForGraphicAsync} = this.props;\n\n    if (ofss === 1 && this.state.offset === 0){return}\n\n    // console.log('this.state.offset',this.state.offset);\n    \n    const ofs = ofss + this.state.offset;\n    // console.log('ofs',ofs);\n\n    this.setOffset(ofss);\n\n    const today = new Date();\n    today.setDate(today.getDate() + ofs);\n    \n    const currentHours = parseInt(today.toISOString().split('T')[1].slice(0,2)) + 3;\n    // console.log('currentHours',currentHours);\n\n    const todayStartDay = today.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    const todayStartDay2 = today.toISOString().split('T')[0] + 'T07:00:00.000Z';\n\n    const todayStart = today.toISOString().split('T')[0] + 'T08:00:00.000Z';\n    let todayEnd = today.toISOString().split('T')[0] + 'T19:00:00.000Z';\n\n    const StartDay = today.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    let EndDay = today.toISOString().split('T')[0] + 'T23:00:00.000Z';\n    \n\n    \n    fetchAmountUsersOfStartDayGraphicsAsync(todayStartDay,todayStartDay2);\n\n    if (currentHours > 18){\n      const todayEndDay = today.toISOString().split('T')[0] + 'T20:00:00.000Z';\n      const todayEndDay2 = today.toISOString().split('T')[0] + 'T23:00:00.000Z';\n      fetchAmountUsersOfEndDayGraphicsAsync(todayEndDay,todayEndDay2);\n    }else {\n      todayEnd = today;\n      todayEnd.setDate(today.getDate() + 2);\n      // console.log('todayEnd',todayEnd);\n\n      EndDay = todayEnd;\n    }\n\n    fetchAmountUsersForGraphicsAsync(todayStart,todayEnd);\n    \n    fetchAmountNewEventsForGraphicAsync(StartDay,EndDay);\n    fetchAmountEndEventsForGraphicAsync(StartDay,EndDay);\n  }\n\n\nrender() {\n    const {countUsersGraph, isFetchingUserOnline, selectAmountNewEvent, selectAmountEndedEvent,selectCountUsersOfStartDay , selectCountUsersOfEndDay} = this.props;\n\n    const { date } = this.state;\n    const today = new Date();\n       const stateDate = date.getDate().toString();\n      const today3=today.getDate().toString();\n      let isToday = false;\n      if (stateDate === today3) {\n        isToday = true;\n      }\n    let usersCount = 0;\n    let eventsAmount = 0;\n    let endedAmount = 0;\n\n    const usersLine = countUsersGraph.data.chartData;\n    const usersLineStartDay = selectCountUsersOfStartDay.online;\n    const usersLineEndDay = selectCountUsersOfEndDay.online;\n\n    const eventsLine = selectAmountNewEvent.data.chartData;\n    const endedLine = selectAmountEndedEvent.data.chartData;\n\n   let ddddd = new Date().toISOString();\n   let nowD = ddddd.split('T')[1].slice(0,2);\n\n  //  // console.log('ddddd',ddddd.split('T')[1].slice(0,2)); \n   \n    const newObj = {...data[0], Users: usersLineStartDay};\n    data[0] = newObj;\n\n    for (let index = 1; index < 12; index++) {\n\n      const indexMinus = index -1;\n      const newObjDay = {...data[index], Users: usersLine[indexMinus]};\n      // if(nowD === data[index].name.slice(0,2)){\n      //   usersCount = usersLine[indexMinus]\n      // }\n      //usersCount\n      data[index] = newObjDay;\n      \n    }\n\n    const newObjEndDay = {...data[12], Users: usersLineEndDay};\n    data[12] = newObjEndDay;\n\n    const allArray = concat(usersLine, usersLineStartDay, usersLineEndDay);\n    usersCount = Math.max.apply(Math, allArray);\n    // var max_of_array = Math.max.apply(Math, array);\n    // // console.log('data',data);\n    \n     \n\n    // _.reduce([1, 2], function(sum, n) {\n    //   return sum + n;\n    // }, 0);\n    // => 3\n\n    //////////////////////////////////////\n\n    const startDataNewEvent = eventsLine.slice(0,7);\n    const startDataNewEventSum = reduce(startDataNewEvent,(sum,n)=>(sum + n),0);\n    const newObjs = {...data[0], Events: startDataNewEventSum};\n    data[0] = newObjs;\n\n    const startNewEvent = eventsLine.slice(8,19);\n    startNewEvent.forEach((el,index) => {\n      const indexPlus = index +1;\n      const newObj = {...data[indexPlus], Events: el};\n      data[indexPlus] = newObj;\n      if(nowD === data[indexPlus].name.slice(0,2)){\n        // eventsAmount = el\n      }\n    });\n    \n    eventsLine.forEach((el,index) => {\n      eventsAmount += el\n    });\n\n    //////////////////////////////////////\n\n    const endDataNewEvent = eventsLine.slice(19,23);\n    const endDataNewEventSum = reduce(endDataNewEvent,(sum,n)=>(sum + n),0);\n    const newObjn = {...data[12], Events: endDataNewEventSum};\n    data[12] = newObjn;\n\n\n    //close\n    const startDataClose = endedLine.slice(0,7);\n    const startDataCloseSum = reduce(startDataClose,(sum,n)=>(sum + n),0);\n    const newObjc = {...data[0], Closed: startDataCloseSum};\n    data[0] = newObjc;\n\n    const startClose = endedLine.slice(8,19);\n    startClose.forEach((el,index) => {\n      const indexPlus = index +1;\n      const newObj = {...data[indexPlus], Closed: el};\n      data[indexPlus] = newObj;\n\n      if(nowD === data[indexPlus].name.slice(0,2)){\n        // endedAmount = el\n      }\n    });\n\n    endedLine.forEach((el,index) => {\n      endedAmount += el\n    });\n\n    const endDataClose = endedLine.slice(19,23);\n    const endDataCloseSum = reduce(endDataClose,(sum,n)=>(sum + n),0);\n    const newObjcs = {...data[12], Closed: endDataCloseSum};\n    data[12] = newObjcs;\n\n    \n\n\n    // // console.log(window.innerWidth);\n    const styleLblUsersGraphic3 = !isFetchingUserOnline ? {position: 'absolute', top: '-40px', right: '-15px', color:'#483d93',display: 'flex', alignItems: 'center'}\n    : {position: 'absolute', top: '-30px', right: '0px', color:'#ccc',display: 'flex', alignItems: 'center'};\n    \n    const styleLblUsersGraphic = !isFetchingUserOnline ? {position: 'absolute', top: '25px', right: '10px', color:'white', backgroundColor:'rgb(136, 132, 216)',width:'30px',height: 30}\n    : {position: 'absolute', top: '25px', right: '10px', color:'#ccc',width:'30px',height: 30};\n\n    const styleLblEventsGraphic = !isFetchingUserOnline ? {position: 'absolute', top: '60px', right: '10px', color:'black', backgroundColor:'rgb(130, 202, 157)',width:'30px',height: 30}\n    : {position: 'absolute', top: '60px', right: '10px', backgroundColor:'#91c1b4', color:'#ccc',width:'30px',height: 30};\n\n    \n    const styleLblEndedGraphic = !isFetchingUserOnline ? {position: 'absolute', top: '100px', right: '10px', color:'black', backgroundColor:'rgb(255, 192, 0)',width:'30px',height: 30}\n    : {position: 'absolute', top: '100px', right: '10px', color:'#ccc',width:'30px',height: 30};\n\n\n    const styleBtnUpdateUsersGraphic = isFetchingUserOnline ? {position: 'absolute', bottom: '10px', right: '18px', cursor:'pointer', transition: 'transform 0.2s'}\n    :{position: 'absolute', bottom: '10px', right: '15px', cursor:'pointer', transform: 'rotate(-45deg)', color:'red'};\n    \n    \n    const winWidth = window.innerWidth;\n    let windthLine = 500;\n    let leftLine = 30;\n    let rightLine = 30;\n\n    if (winWidth < 400){\n      windthLine = 250;\n      leftLine = 10;\n      rightLine = 10;\n    }\n     \n    return (\n      <div id='graphics' style={{ position:'relative'}}>\n        <LineChart width={windthLine} height={200} data={data} >\n          <CartesianGrid strokeDasharray=\"8 1\" />\n          <XAxis dataKey=\"name\" padding={{ left: leftLine, right: rightLine }} />\n          <YAxis />\n          <Tooltip />\n          <Legend  style={{bottom: '0px'}}/>\n          <Line type=\"monotone\" dataKey='Users' stroke=\"#8884d8\" name='Польз. он-лайн' activeDot={{ r: 8 }} />\n          <Line type=\"monotone\" dataKey=\"Events\" name='Новые события' stroke=\"#82ca9d\" />\n          <Line type=\"monotone\" dataKey=\"Closed\" name='Закрытые событ.' stroke=\"#FFc000\" />\n          \n        </LineChart>\n       \n        <div style={styleLblUsersGraphic3}>\n          <ArrowLeftIcon onClick={() => {this.fetchAll(-1)}} color=\"secondary\" />\n            {date.toISOString().slice(8,10)}/{date.toISOString().slice(5,7)} \n          <ArrowRightIcon disabled={isToday} onClick={() => {this.fetchAll(1)}}  color={isToday ? 'disabled' : 'error'}/>\n        </div>\n        \n        <div><Avatar  style={styleLblUsersGraphic}>{usersCount}</Avatar></div>\n        <div><Avatar  style={styleLblEventsGraphic}>{eventsAmount}</Avatar></div>\n        <div ><Avatar style={styleLblEndedGraphic}>{endedAmount}</Avatar></div>\n        <RefreshIcon id='btnUpdateGraphicUsers'  style={styleBtnUpdateUsersGraphic} onClick={() => {this.fetchAll(0)}}/>\n      </div>\n    );\n  } \n} \n\n \nconst mapStateToProps = createStructuredSelector ({\n  countUsersGraph: selectCountUsersGraph,\n  selectCountUsersOfStartDay: selectCountUsersOfStartDayGraph,\n  selectCountUsersOfEndDay: selectCountUsersOfEndDayGraph,\n  isFetchingUserOnline: selectIsFetchingUserOnline,\n  selectAmountNewEvent: selectAmountEventGraph,\n  selectAmountEndedEvent: selectAmountEndEventGraph,\n});\n \n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAmountUsersForGraphicsAsync: (startDate, endDate) => dispatch(fetchAmountUsersForGraphicsAsync(startDate, endDate)),\n  fetchAmountUsersOfStartDayGraphicsAsync: (startDate, endDate) => dispatch(fetchAmountUsersOfStartDayGraphicsAsync(startDate, endDate)),\n  fetchAmountUsersOfEndDayGraphicsAsync: (startDate, endDate) => dispatch(fetchAmountUsersOfEndDayGraphicsAsync(startDate, endDate)),\n  fetchAmountNewEventsForGraphicAsync: (startDate, endDate) => dispatch(fetchAmountNewEventsForGraphicAsync(startDate, endDate)),\n  fetchAmountEndEventsForGraphicAsync: (startDate, endDate) => dispatch(fetchAmountEndEventsForGraphicAsync(startDate, endDate)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChartWithXAxisPading);\n ","/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/History-obj-last.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/auth-dashboard/AuthDashboard.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/auth/auth.component.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/index.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/changeLog/ChangeLog.component.jsx",[],["293","294"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/HistoryChanges.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/LineChartWithXAxisPading.js",["295","296"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/listItems.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/History-obj-last.js",[],["297","298"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/index.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/NewsList.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/Users.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/Title.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/index.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/HistoryChanges.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/History-obj-last.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/users/listItems.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/NewObj.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/dashboard/TableListHistories.sceen.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/components/header/listItems.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TabMenu.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/tabTwoMenu.js",["299"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/SearchPanel.twoTab.js",["300","301"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/DatePicker.twoTab.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/DatePickerEnd.twoTab.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/LineChartWithXAxisPading.twoTab.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/Title.twoTab.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/tabOneMenu.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/DatePicker.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/DatePickerEnd.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/SearchPanel.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/TabOGH.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/FirstTab/Title.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/StatisticChartOfPeriod.twoTab.js",["302"],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/store/adminPanelTrest/StatisticPage.selectors.js",[],"/Users/dazn311/Desktop/HTML-Dev/React/MosGeoTrest/adminpanel/src/screens/historyChanges/TwoTab/DatePickerOne.secondTab.js",[],{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"303","replacedBy":"307"},{"ruleId":"305","replacedBy":"308"},{"ruleId":"303","replacedBy":"309"},{"ruleId":"305","replacedBy":"310"},{"ruleId":"303","replacedBy":"311"},{"ruleId":"305","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":175,"column":11,"nodeType":"315","messageId":"316","endLine":175,"endColumn":16},{"ruleId":"317","severity":1,"message":"318","line":205,"column":6,"nodeType":"319","endLine":205,"endColumn":70,"suggestions":"320"},{"ruleId":"303","replacedBy":"321"},{"ruleId":"305","replacedBy":"322"},{"ruleId":"313","severity":1,"message":"323","line":8,"column":8,"nodeType":"315","messageId":"316","endLine":8,"endColumn":12},{"ruleId":"303","replacedBy":"324"},{"ruleId":"305","replacedBy":"325"},{"ruleId":"313","severity":1,"message":"326","line":11,"column":18,"nodeType":"315","messageId":"316","endLine":11,"endColumn":27},{"ruleId":"313","severity":1,"message":"327","line":11,"column":29,"nodeType":"315","messageId":"316","endLine":11,"endColumn":33},{"ruleId":"303","replacedBy":"328"},{"ruleId":"305","replacedBy":"329"},{"ruleId":"317","severity":1,"message":"330","line":364,"column":6,"nodeType":"319","endLine":364,"endColumn":137,"suggestions":"331"},{"ruleId":"313","severity":1,"message":"332","line":55,"column":10,"nodeType":"315","messageId":"316","endLine":55,"endColumn":16},{"ruleId":"313","severity":1,"message":"333","line":62,"column":9,"nodeType":"315","messageId":"316","endLine":62,"endColumn":21},{"ruleId":"313","severity":1,"message":"334","line":2,"column":25,"nodeType":"315","messageId":"316","endLine":2,"endColumn":29},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],["335"],["336"],["335"],["336"],["335"],["336"],"no-unused-vars","'today' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchAmountOGH', 'fetchAmountOGHToDay', 'fetchAmountOGHToThreeDays', 'fetchAmountOGHToWeek', and 'fetchEventsPointShort'. Either include them or remove the dependency array. If 'fetchEventsPointShort' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["337"],["335"],["336"],"'Icon' is defined but never used.",["335"],["336"],"'LineChart' is defined but never used.","'Line' is defined but never used.",["335"],["336"],"React Hook useEffect has missing dependencies: 'dateWidth' and 'setUserData'. Either include them or remove the dependency array.",["338"],"'filter' is assigned a value but never used.","'handleFilter' is assigned a value but never used.","'Cell' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [fetchAmountNewEventsForGraphic, fetchAmountEndEventsForGraphic, fetchEventsPointShort, fetchAmountOGH, fetchAmountOGHToDay, fetchAmountOGHToWeek, fetchAmountOGHToThreeDays]",{"range":"343","text":"344"},"Update the dependencies array to be: [usersOnlineGraphOfStaticPage, newEventsGraphOfStaticPage, endEventsGraphOfStaticPage, newMessageGraphOfStaticPage, selectDenyEvents, dateWidth, setUserData]",{"range":"345","text":"346"},[7102,7166],"[fetchAmountNewEventsForGraphic, fetchAmountEndEventsForGraphic, fetchEventsPointShort, fetchAmountOGH, fetchAmountOGHToDay, fetchAmountOGHToWeek, fetchAmountOGHToThreeDays]",[11842,11973],"[usersOnlineGraphOfStaticPage, newEventsGraphOfStaticPage, endEventsGraphOfStaticPage, newMessageGraphOfStaticPage, selectDenyEvents, dateWidth, setUserData]"]