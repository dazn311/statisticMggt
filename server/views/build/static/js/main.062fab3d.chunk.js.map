{"version":3,"sources":["store/adminPanelTrest/adminPanelTrest.data.js","store/adminPanelTrest/adminPanelTrest.types.js","store/adminPanelTrest/adminPanelTrest.reducer.js","store/user/user.types.js","store/user/user.reducer.js","store/root-reducer.js","store/store.js","store/adminPanelTrest/adminPanelTrest.selectors.js","store/adminPanelTrest/adminPanelTrest.actions.js","screens/dashboard/LineChartWithXAxisPading.js","screens/dashboard/Title.js","screens/dashboard/Deposits.js","screens/dashboard/NewOGH.js","components/header/listItems.js","components/header/header.component.jsx","screens/dashboard/TableListHistories.sceen.js","screens/dashboard/Dashboard.js","screens/dashboard/index.js","screens/historyChanges/FirstTab/DatePicker.js","screens/historyChanges/FirstTab/DatePickerEnd.js","screens/historyChanges/FirstTab/SearchPanel.js","screens/historyChanges/FirstTab/TabOGH.js","screens/historyChanges/FirstTab/tabOneMenu.js","screens/historyChanges/TwoTab/DatePicker.twoTab.js","screens/historyChanges/TwoTab/DatePickerEnd.twoTab.js","screens/historyChanges/TwoTab/LineChartWithXAxisPading.twoTab.js","store/adminPanelTrest/StatisticPage.selectors.js","screens/historyChanges/TwoTab/tabTwoMenu.js","screens/historyChanges/ThirdTab/DatePicker.thirdTab.js","screens/historyChanges/ThirdTab/DatePickerEnd.thirdTab.js","screens/historyChanges/ThirdTab/ColomsChart.js","screens/historyChanges/ThirdTab/tabThirdMenu.js","screens/historyChanges/TabMenu.js","screens/historyChanges/HistoryChanges.js","screens/historyChanges/index.js","App.js","reportWebVitals.js","index.js"],"names":["ORGANIZATIONS_DATA","Organisations","org_id","org_name","org_address","org_contacts","org_district","org_type","currentUser","user_id","user_fio","login","password","user_status","user_active","user_role","user_reg_date","user_end_date","user_parent","user_child","user_perms","user_locked","user_org_id","user_fio_lit","user_last_seen","Users","countUsers","dataTime","data","online","operators","users","countOGH","objTotal","objMggt","objRelatives","amountNewOGH","objTotalToday","objTotalLastWeek","objTotalMonth","amountOGHtoDay","amountOGHtoWeek","amountOGHtoTreeDays","countUsersGraph","startTime","endTime","fragments","chartMax","chartData","countUsersOfStartDayGraph","countUsersOfEndDayGraph","countEventGraph","amountEventGraph","amountEndEventGraph","statusEnumEventPoint","new_rec","deny_rec","done_rec","del_rec","new_msg","new_user","del_user","block_user","end_user","new_org","del_org","change_org","block_org","logout","open_obj","save_obj","new_obj","del_obj","change_obj","move_obj","rel_add_obj","bnd_add_obj","bnd_change_obj","statusEnumEventPointColor","eventShortPoints","amount","nodes","type","text","date","user","userID","username","eventPoints","rec_id","rec_obj_id","rec_send_id","rec_recip_id","rec_descrip","rec_n","rec_name","rec_locat","rec_status","rec_adres","rec_date","rec_image","rec_xy","rec_read","rec_smej_obj_id","messagesEventPoints","msg_id","msg_rec_id","msg_text","msg_status","msg_date","msg_read","msg_user_id","msg_attch_id","msg_fio","msg_file","msg_geomet","fetchDataForEventShortPoints","limit","startDate","endDate","newEventsGraphOfStaticPage","endEventsGraphOfStaticPage","denyEventsGraphOfStaticPage","usersOnlineGraphOfStaticPage","newMessageGraphOfStaticPage","usersNewGraphOfStaticPage","usersDelGraphOfStaticPage","usersBlockGraphOfStaticPage","usersEndGraphOfStaticPage","FetchData","FetchDataStaticPage","AdminActionTypes","SET_CURRENT_POINT","INITIAL_STATE","currentPointId","isFetchingUserOnline","errorMessage","undefined","adminPandelReducer","state","action","payload","newDate","newEndDate","UserActionTypes","curUser","userReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","adminPanel","adminPanelTrest","persistReducer","middlewares","ReduxThunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","getSelectPoints","selectStatusEventPoint","createSelector","points","items","objects","organizations","selectIsFetchingUserOnline","selectCountUsersGraph","selectCountUsersOfStartDayGraph","selectCountUsersOfEndDayGraph","selectAmountEventGraph","selectAmountEndEventGraph","selectAmountOGH","selectAmountToDayOGH","selectAmountToWeekOGH","selectAmountToTreeDaysOGH","selectStatusEnumEventPointColor","selectEventShortPoints","putDataUsersOnlineError","putDataUsersOnline","putDataUsersOfStartDayOnline","putDataUsersOfEndDayOnline","putEventsForPeriodShort","putNewEventsGraphic","putEndEventsGraphic","setDataUsersOnlineToGraphicToStaticPage","setDataNewEventToGraphicToStaticPage","setDataEndEventToGraphicToStaticPage","setDataDenyEventToGraphicToStaticPage","setDataNewMessageToGraphicToStaticPage","setDataUsersDelGraphicToStaticPage","setDataUsersEndGraphicToStaticPage","setDataUsersBlockGraphicToStaticPage","setNewOGHGraphicToStaticPage","rootURL","urlUserOnlineByInterval","urlQueryAmount","postData","a","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","fetchAmountUsersForGraphicsAsync","dispatch","then","catch","error","message","fetchAmountUsersOfStartDayGraphicsAsync","fetchAmountUsersOfEndDayGraphicsAsync","fetchAmountNewEventsForGraphicAsync","eventss","fetchAmountEndEventsForGraphicAsync","fetchAmountOGHForDashboardAsync","objOGH","fetchAmountOGHToDayAsync","start0","moment","startOf","toISOString","objTodayOGH","fetchAmountOGHToThreeDaysAsync","Date","setDate","getDate","objMonthOGH","fetchAmountOGHToWeekAsync","objWeekOGH","fetchEventsPointShortAsync","fetchEventFromPeriodAsync","start","end","name","Events","Closed","amt","LineChartWithXAxisPading","props","offset","fetchAll","bind","setOffset","this","ofs","dd","ofsss","setState","ofss","today","currentHours","parseInt","split","slice","todayStartDay","todayStartDay2","todayStart","todayEnd","StartDay","EndDay","todayEndDay","todayEndDay2","selectAmountNewEvent","selectAmountEndedEvent","selectCountUsersOfStartDay","selectCountUsersOfEndDay","stateDate","toString","today3","nowHours","getHours","isToday","usersCount","eventsAmount","endedAmount","usersLine","usersLineStartDay","usersLineEndDay","eventsLine","endedLine","newObj","max_hours","index","indexMinus","newObjDay","newObjEndDay","allArray","concat","Math","max","apply","startDataNewEvent","startDataNewEventSum","reduce","sum","n","newObjs","forEach","el","indexPlus","endDataNewEvent","endDataNewEventSum","newObjn","startDataClose","startDataCloseSum","newObjc","endDataClose","endDataCloseSum","newObjcs","styleLblUsersGraphic3","position","top","right","color","display","alignItems","styleLblUsersGraphic","width","height","backgroundColor","styleLblEventsGraphic","styleLblEndedGraphic","styleBtnUpdateUsersGraphic","bottom","cursor","transition","transform","windthLine","leftLine","rightLine","innerWidth","id","style","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","padding","left","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","onClick","disabled","Avatar","PureComponent","mapStateToProps","createStructuredSelector","connect","Title","Typography","component","variant","gutterBottom","children","useStyles","makeStyles","depositContext","flex","amountOGH","classes","lastDate","Fragment","opacity","marginTop","marginBottom","objMgtt","className","amountToDayOGH","amountToWeekOGH","amountToTreeDaysOGH","justifyContent","marginRight","textAlign","withRouter","ListSubheader","ListItem","ListItemIcon","ListItemText","location","MenuItem","Link","to","selected","pathname","primary","button","theme","root","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","news","background","fixedHeight","Header","React","useState","open","setOpen","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","avatar","lineHeight","Divider","List","sssd","columns","field","headerName","direction","description","rows","fullName","statusEventPoint","nodesEvent","Array","isArray","_","orderBy","map","nodeE","newNode","push","pageSize","loading","icons","Copyright","align","href","getFullYear","fetchEventsPointShort","fetchDataUsersOnline","fetchAmountUsersOfStartDay","fetchAmountUsersOfEndDay","fetchAmountNewEventsForGraphic","fetchAmountEndEventsForGraphic","fetchAmountOGH","fetchAmountOGHToDay","fetchAmountOGHToWeek","fetchAmountOGHToThreeDays","value","setValue","lineHeader","setLineHeader","useEffect","fixedHeightPaper","CssBaseline","Container","maxWidth","Grid","item","xs","md","lg","Paper","NewOGH","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","Box","pt","AuthDash","flexWrap","textField","initional","dataOfFetchForEventShort","setDataStartforFetchEvents","dataStartforFetchEventsForPeriod","fetchEventFromPeriod","Data","noValidate","TextField","defaultValue","InputLabelProps","shrink","e","eT","target","setDataEndforFetchEvents","BootstrapInput","withStyles","input","borderRadius","palette","border","fontSize","fontFamily","join","borderColor","boxShadow","InputBase","margin","minWidth","SearchPanel","setSearchText","setField","searchType","setSearchType","filter","setFilter","FormControl","InputLabel","htmlFor","placeholder","Select","labelId","table","selectEventShort","datesOfFetchForEvent","searchValue","fieldValue","tabValue","settabValue","console","log","nameEvent","userName","dateFormatt","refactData","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","idx","toLowerCase","includes","row","scope","toLocaleString","seeMore","datePick","Orders","setsearchValue","setFieldValue","useCallback","val","DatePicker","DatePickerEnd","DatePickers","setDataStart","graphicValue","Bar","stackId","fill","selectNewEventsGraphOfStaticPage","selectEndEventsGraphOfStaticPage","selectDenyEventsGraphOfStaticPage","selectUsersOnlineGraphOfStaticPage","selectNewMessageGraphOfStaticPage","selectAmountNewOGH","InitionalData","initionalDateStart","initionalDateEnd","tabWrap","tabRight","overflowY","scrollbarColor","tabLeft","paddingLeft","createData","calories","fat","carbs","protein","tmpAmountEvents","selectDenyEvents","fetchAllEventsGraphic","fetchAllEventsGraphicAsync","fetchAllUsersGraphic","fetchAllUsersGraphicAsync","setGraphicValue","dateWidth","setDateWidth","dateStart","setDateStart","dateEnd","setDateEnd","daysInMonth","month","year","d1","d2","dateEndPlus","setDataEvants","newEvent","endEvent","denyEvent","newMess","maxUsersOfDay","chunkUsers","chunk","length","max_of_array","me1","getMonth","y1","getYear","dOm","m1","deny","activeChat","setUserData","sum_of_array","setNewEventData","setEndEventData","denyEvents","setDenyEventData","setNewMessagesData","labels","datasets","borderWidth","DoughnutChart","dataArr","fetchNewOGH","fetchNewOGHThirdTabStaticPageGraphicAsync","setDateStartFromPicker","setDateEndFromPicker","newOGH","newOGHRelatives","ColomsChart","TabPanel","other","role","hidden","aria-labelledby","p","a11yProps","TabMenu","fetchEventForPeriod","Tabs","indicatorColor","textColor","scrollButtons","Tab","textTransform","HistoryChanges","HistoryPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.062fab3d.chunk.js","sourcesContent":["const ORGANIZATIONS_DATA = {\n   \n  Organisations: \n    [\n      {\n        org_id: 0,\n        org_name: 'АДО ВВ',\n        org_address: 'Сретенский бул., д.3',\n        org_contacts: '+7 495 666-77-66',\n        org_district: 1,\n        org_type: 1,\n      },{\n        org_id: 1,\n        org_name: 'КТО ПА',\n        org_address: 'Неглинная, д.4',\n        org_contacts: '+7 495 888-77-66',\n        org_district: 1,\n        org_type: 1,\n      },\n    ],\n  currentUser: \n    {\n      user_id: 0,\n      user_fio: 'Петров Владимир Михайлович',\n      login: '',\n      password: '',\n      user_status: 1,\n      user_active: 1,\n      user_role: 2,\n      user_reg_date: 152458484848,\n      user_end_date: 165454545455,\n      user_parent: 0,\n      user_child: 2,\n      user_perms: 1,\n      user_locked: false,\n      user_org_id: 0,\n      user_fio_lit: 'Петров В.М.',\n      user_last_seen: 0,\n    },\n  Users: \n    [{\n      user_id: 0,\n      user_fio: 'Васильев Олег Михайлович',\n      login: '',\n      password: '',\n      user_status: 1,\n      user_active: 1,\n      user_role: 2,\n      user_reg_date: 152458484848,\n      user_end_date: 165454545455,\n      user_parent: 0,\n      user_child: 2,\n      user_perms: 1,\n      user_locked: false,\n      user_org_id: 0,\n      user_fio_lit: 'Васильев В.М.',\n      user_last_seen: 0,\n    },{\n      user_id: 1,\n      user_fio: 'Смирнов Дмитрий Михайлович',\n      login: '',\n      password: '',\n      user_status: 1,\n      user_active: 1,\n      user_role: 2,\n      user_reg_date: 152458484848,\n      user_end_date: 165454545455,\n      user_parent: 0,\n      user_child: 2,\n      user_perms: 1,\n      user_locked: false,\n      user_org_id: 0,\n      user_fio_lit: 'Смирнов В.М.',\n      user_last_seen: 0,\n    },{\n      user_id: 2,\n      user_fio: 'Савельев Петр Михайлович',\n      login: '',\n      password: '',\n      user_status: 1,\n      user_active: 1,\n      user_role: 2,\n      user_reg_date: 152458484848,\n      user_end_date: 165454545455,\n      user_parent: 0,\n      user_child: 2,\n      user_perms: 1,\n      user_locked: false,\n      user_org_id: 0,\n      user_fio_lit: 'Савельев В.М.',\n      user_last_seen: 0,\n    },{\n      user_id: 3,\n      user_fio: 'Орлов Геннадий Михайлович',\n      login: '',\n      password: '',\n      user_status: 1,\n      user_active: 1,\n      user_role: 2,\n      user_reg_date: 152458484848,\n      user_end_date: 165454545455,\n      user_parent: 0,\n      user_child: 2,\n      user_perms: 1,\n      user_locked: false,\n      user_org_id: 0,\n      user_fio_lit: 'Орлов В.М.',\n      user_last_seen: 0,\n    },],\n  countUsers: \n    {\n      dataTime: '2021-02-08T20:48:33.296Z',\n      data:  {\n        online: 100,\n        operators: 20,\n        users: 80,\n      }\n    },\n  countOGH:  \n    {\n      dataTime: '2021-02-08T20:48:33.296Z',\n      data:  {\n        objTotal: 100,\n        objMggt: 30,\n        objRelatives: 70,\n      }\n    },\n  amountNewOGH: \n    {\n      dataTime: '2021-02-08T20:48:33.296Z',\n      data:  {\n        objTotal: 100,\n        objTotalToday: 100,\n        objTotalLastWeek: 100,\n        objTotalMonth: 100,\n        objMggt: 30,\n        objRelatives: 70,\n      }\n    },\n  amountOGHtoDay: \n    {\n      dataTime: '2021-02-08T20:48:33.296Z',\n      data:  {\n        objTotal: 1,\n        objMggt: 2,\n        objRelatives: 3,\n      }\n    },\n  amountOGHtoWeek: \n    {\n      dataTime: '2021-02-08T20:48:33.296Z',\n      data:  {\n        objTotal: 0,\n        objMggt: 0,\n        objRelatives: 0,\n      }\n    },\n  amountOGHtoTreeDays: \n    {\n      dataTime: '2021-02-08T20:48:33.296Z',\n      data:  {\n        objTotal: 1,\n        objMggt: 2,\n        objRelatives: 3,\n      }\n    },\n  countUsersGraph: //graphic of first page\n    {\n      startTime: '08:20 (21.01.21)',\n      endTime:   '2021-02-08T20:48:33.296Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n  countUsersOfStartDayGraph: //graphic of first page\n    {\n      startTime: '0',\n      endTime:   '0',\n      online: 0\n    },\n  countUsersOfEndDayGraph: //graphic of first page\n    {\n      startTime: '0',\n      endTime:   '0',\n      online: 0\n    },\n  countEventGraph: \n    {\n      startTime: '08:20 (21.01.21)',\n      endTime:   '2021-02-08T20:48:33.296Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n  amountEventGraph: //events/amount\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n  amountEndEventGraph: //events/amount\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n  statusEnumEventPoint:  {\n    new_rec:'создание нового события',\n    deny_rec:'отклонение события (оператором)',\n    done_rec:'выполнение/завершение события',\n    del_rec:'удаление события',\n    new_msg:'новое сообщение в событии',\n    new_user:'добавление нового пользователя',\n    del_user:'удаление пользователя',\n    block_user:'локировка пользователя администратором',\n    end_user:'завершение действия аккаунта пользователя',\n    new_org:'добавление организации',\n    del_org:'удаление организации',\n    change_org:'изменение в организации (состав пользователей организации, изменение данных по организации',\n    block_org:'блокировка организации администратором',\n    login:'авторизация в системе была произведена',\n    logout:'выход из системы был произведен',\n    open_obj:'объект',\n    save_obj:'сохранение/пересохранение объекта',\n    new_obj:'новый объект добавлен в систему',\n    del_obj:'объект был удален из системы',\n    change_obj:'изменение описания объекта/характеристик',\n    move_obj:'перенос объекта в другую организацию и/или к другому пользователю',\n    rel_add_obj:'добавление смежника к объекту',\n    bnd_add_obj:'добавление границы к объекту',\n    bnd_change_obj:'изменение в границе объекта',\n  \n  },\n  statusEnumEventPointColor:  {\n    new_rec:'red',\n    deny_rec:'orange',\n    done_rec:'green',\n    del_rec:'orange',\n    new_msg:'orange',\n    new_user:'red',\n    del_user:'orange',\n    block_user:'grey',\n    end_user:'orange',\n    new_org:'red',\n    del_org:'orange',\n    change_org:'grey',\n    block_org:'orange',\n    login:'grey',\n    logout:'grey',\n    open_obj:'grey',\n    save_obj:'grey',\n    new_obj:'red',\n    del_obj:'orange',\n    change_obj:'grey',\n    move_obj:'orange',\n    rel_add_obj:'red',\n    bnd_add_obj:'red',\n    bnd_change_obj:'grey',\n  \n  },\n  eventShortPoints: // for tab bottom and page statistics\n    {\n      dataTime: \"2021-01-26T02:00:00.000Z\",\n      amount:   10,\n      data: {\n        nodes: [\n          {\n            type: 'new_rec',  \n            text: 'Создание нового события на объекте Mocke',\n            date: \"2021-01-26T02:00:00.000Z\", \n            user: {\n              userID: 14,  \n              username: 'Томайлов А.В.'  \n            }\n            \n          },\n        ],\n      },\n    },\n  eventPoints: \n    [{\n      rec_id: 0,\n      rec_obj_id:   2,\n      rec_send_id:   24,\n      rec_recip_id:   24,\n      rec_descrip:   'Расположение дорожных знаков',\n      rec_n:   24,\n      rec_name:   'Дорожные знаки',\n      rec_locat:   '24',// временно не используется\n      rec_status:   2,\n      rec_adres:   '24',// временно не используется\n      rec_date:   2445654654,\n      rec_image:   'image.png',\n      rec_xy:   '55.768510, 37.524506',\n      rec_read:   1,\n      rec_smej_obj_id:   4, \n    },{\n      rec_id: 1,\n      rec_obj_id:   2,\n      rec_send_id:   24,\n      rec_recip_id:   24,\n      rec_descrip:   'Расположение дорожных знаков',\n      rec_n:   24,\n      rec_name:   'Дорожные знаки',\n      rec_locat:   '24',// временно не используется\n      rec_status:   2,\n      rec_adres:   '24',// временно не используется\n      rec_date:   2445654654,\n      rec_image:   'image.png',\n      rec_xy:   '55.768510, 37.524506',\n      rec_read:   1,\n      rec_smej_obj_id:   4, \n    },{\n      rec_id: 2,\n      rec_obj_id:   2,\n      rec_send_id:   24,\n      rec_recip_id:   24,\n      rec_descrip:   'Расположение дорожных знаков',\n      rec_n:   24,\n      rec_name:   'Дорожные знаки',\n      rec_locat:   '24',// временно не используется\n      rec_status:   2,\n      rec_adres:   '24',// временно не используется\n      rec_date:   2445654654,\n      rec_image:   'image.png',\n      rec_xy:   '55.768510, 37.524506',\n      rec_read:   1,\n      rec_smej_obj_id:   4, \n    },{\n      rec_id: 3,\n      rec_obj_id:   2,\n      rec_send_id:   24,\n      rec_recip_id:   24,\n      rec_descrip:   'Расположение дорожных знаков',\n      rec_n:   24,\n      rec_name:   'Дорожные знаки',\n      rec_locat:   '24',// временно не используется\n      rec_status:   2,\n      rec_adres:   '24',// временно не используется\n      rec_date:   2445654654,\n      rec_image:   'image.png',\n      rec_xy:   '55.768510, 37.524506',\n      rec_read:   1,\n      rec_smej_obj_id:   4, \n    },\n  ],\n  messagesEventPoints: \n    [{\n      msg_id: 0,\n      msg_rec_id:   2,\n      msg_text:   'Эти знаки не принадлежат нашей территории',\n      msg_status:   2,\n      msg_date:   5465464,\n      msg_read:   1,\n      msg_user_id:   2,\n      msg_attch_id:   4,// временно не используется\n      msg_fio:   'Vasilev F.F.',\n      msg_file:   'cart.png',// временно не используется\n      msg_geomet:   '2445654654'\n    },{\n      msg_id: 1,\n      msg_rec_id:   2,\n      msg_text:   'Эти знаки не принадлежат нашей территории',\n      msg_status:   2,\n      msg_date:   5465464,\n      msg_read:   1,\n      msg_user_id:   2,\n      msg_attch_id:   4,// временно не используется\n      msg_fio:   'Vasilev F.F.',\n      msg_file:   'cart.png',// временно не используется\n      msg_geomet:   '2445654654'\n    },{\n      msg_id: 2,\n      msg_rec_id:   2,\n      msg_text:   'Эти знаки не принадлежат нашей территории',\n      msg_status:   2,\n      msg_date:   5465464,\n      msg_read:   1,\n      msg_user_id:   2,\n      msg_attch_id:   4,// временно не используется\n      msg_fio:   'Vasilev F.F.',\n      msg_file:   'cart.png',// временно не используется\n      msg_geomet:   '2445654654'\n    },],\n  fetchDataForEventShortPoints: // for tab bottom and page statistics\n    {\n      limit: 20,\n      startDate: \"0\",\n      endDate: \"0\",\n      // endDate: \"2021-02-11T22:00:00.000Z\",\n    },\n  newEventsGraphOfStaticPage: //events/amount\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n    endEventsGraphOfStaticPage: //events/amount\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n    denyEventsGraphOfStaticPage: //events/amount\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n    usersOnlineGraphOfStaticPage: //events/amount\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      } \n    },\n    newMessageGraphOfStaticPage: //events/amount\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      }\n    },\n    usersNewGraphOfStaticPage: //for statics page to third tab \n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      } \n    },\n    usersDelGraphOfStaticPage: //for statics page to third tab\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      } \n    },\n    usersBlockGraphOfStaticPage: //for statics page to third tab\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      } \n    },\n    usersEndGraphOfStaticPage: //for statics page to third tab\n    {\n      startTime: '2021-01-26T02:00:00.000Z',\n      endTime:   '2021-01-27T02:00:00.000Z',\n      fragments:   24,\n      data: {\n        chartMax: 100,\n        chartData: []\n      } \n    },\n\n  };\n\n  \n\n  export default ORGANIZATIONS_DATA;","const AdminActionTypes = {\n    SET_CURRENT_POINT: 'SET_CURRENT_POINT',\n};\n\nexport const FetchData = {\n    GET_USERS_ONLINE_START: 'GET_USERS_ONLINE_START', //  query/users/online\n    GET_USERS_ONLINE_SUCCESS: 'GET_USERS_ONLINE_SUCCESS', \n    GET_USERS_ONLINE_START_DAY: 'GET_USERS_ONLINE_START_DAY', \n    GET_USERS_ONLINE_END_DAY: 'GET_USERS_ONLINE_END_DAY', \n    GET_USERS_ONLINE_FAILURE: 'GET_USERS_ONLINE_FAILURE', \n    GET_EVENTS_POINT_START: 'GET_EVENTS_POINT_START', \n    GET_EVENTS_END_POINT_START: 'GET_EVENTS_END_POINT_START', \n    GET_NEW_EVENTS_FOR_GRAPHIC_START: 'GET_NEW_EVENTS_FOR_GRAPHIC_START', //putNewEventsGraphic\n    GET_END_EVENTS_FOR_GRAPHIC_START: 'GET_END_EVENTS_FOR_GRAPHIC_START', //putNewEventsGraphic\n    FETCH_COUNT_OGH_FOR_DASHBOARD: 'FETCH_COUNT_OGH_FOR_DASHBOARD', //putNewEventsGraphic\n    FETCH_AMOUNT_OGH_FOR_DASHBOARD: 'FETCH_AMOUNT_OGH_FOR_DASHBOARD', //putNewEventsGraphic\n    FETCH_AMOUNT_OGH_TO_WEEK_FOR_DASHBOARD: 'FETCH_AMOUNT_OGH_TO_WEEK_FOR_DASHBOARD', //putNewEventsGraphic\n    FETCH_AMOUNT_OGH_TO_DAY_FOR_DASHBOARD: 'FETCH_AMOUNT_OGH_TO_DAY_FOR_DASHBOARD', //putNewEventsGraphic\n    FETCH_AMOUNT_OGH_TO_TREE_DAYS_FOR_DASHBOARD: 'FETCH_AMOUNT_OGH_TO_TREE_DAYS_FOR_DASHBOARD', //putNewEventsGraphic\n    FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE: 'FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE', //from TabOGH\n    DATA_START_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE: 'DATA_START_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE', //from TabOGH\n    DATA_END_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE: 'DATA_END_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE', //from TabOGH \n};\n\nexport const FetchDataStaticPage = {\n    FETCH_NEW_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_NEW_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH\n    FETCH_END_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_END_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH\n    FETCH_DENY_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_DENY_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH\n    FETCH_USERS_ONLINE_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_USERS_ONLINE_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH\n    FETCH_USERS_NEW_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_USERS_NEW_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH To tab 3\n    FETCH_USERS_DEL_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_USERS_DEL_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH To tab 3\n    FETCH_USERS_BLOCK_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_USERS_BLOCK_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH To tab 3\n    FETCH_USERS_END_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_USERS_END_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH To tab 3\n    FETCH_NEW_MESSAGE_TO_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_NEW_MESSAGE_TO_GRAPHIC_TO_STATISTIC_PAGE', //from TabOGH\n    FETCH_AMOUNT_NEW_OGH_FOR_GRAPHIC_TO_STATISTIC_PAGE: 'FETCH_AMOUNT_NEW_OGH_FOR_GRAPHIC_TO_STATISTIC_PAGE', \n};\n   \nexport default AdminActionTypes;\n  ","import ORGANIZATIONS_DATA from './adminPanelTrest.data';\nimport AdminActionTypes, {FetchData, FetchDataStaticPage} from './adminPanelTrest.types';\n// import { fetchDataUsersOnline } from './adminPanelTrest.actions';\n  \nconst INITIAL_STATE = {\n    countUsers: ORGANIZATIONS_DATA.countUsers,\n    countOGH: ORGANIZATIONS_DATA.countOGH,\n    amountNewOGH: ORGANIZATIONS_DATA.amountNewOGH,\n    amountOGHtoDay: ORGANIZATIONS_DATA.amountOGHtoDay,//graphic of first page\n    amountOGHtoWeek: ORGANIZATIONS_DATA.amountOGHtoWeek,//graphic of first page\n    amountOGHtoTreeDays: ORGANIZATIONS_DATA.amountOGHtoTreeDays,//graphic of first page\n    countEventGraph: ORGANIZATIONS_DATA.countEventGraph,\n    countUsersGraph: ORGANIZATIONS_DATA.countUsersGraph, //graphic of first page\n    countUsersOfStartDayGraph: ORGANIZATIONS_DATA.countUsersOfStartDayGraph, //graphic of first page\n    countUsersOfEndDayGraph: ORGANIZATIONS_DATA.countUsersOfEndDayGraph, //graphic of first page\n    messagesEventPoints: ORGANIZATIONS_DATA.messagesEventPoints,\n    statusEnumEventPoint: ORGANIZATIONS_DATA.statusEnumEventPoint,\n    eventPoints: ORGANIZATIONS_DATA.eventPoints,\n    eventShortPoints: ORGANIZATIONS_DATA.eventShortPoints, //for events page\n    fetchDataForEventShortPoints: ORGANIZATIONS_DATA.fetchDataForEventShortPoints, //fetch for events page\n    amountEventGraph: ORGANIZATIONS_DATA.amountEventGraph,\n    amountEndEventGraph: ORGANIZATIONS_DATA.amountEndEventGraph,\n    statusEnumEventPointColor: ORGANIZATIONS_DATA.statusEnumEventPointColor,\n    newEventsGraphOfStaticPage: ORGANIZATIONS_DATA.newEventsGraphOfStaticPage, // for GraphOfStaticPage\n    endEventsGraphOfStaticPage: ORGANIZATIONS_DATA.endEventsGraphOfStaticPage,// for GraphOfStaticPage\n    usersOnlineGraphOfStaticPage: ORGANIZATIONS_DATA.usersOnlineGraphOfStaticPage,// for GraphOfStaticPage\n    newMessageGraphOfStaticPage: ORGANIZATIONS_DATA.newMessageGraphOfStaticPage,// for GraphOfStaticPage\n    denyEventsGraphOfStaticPage: ORGANIZATIONS_DATA.denyEventsGraphOfStaticPage,// for GraphOfStaticPage\n    usersNewGraphOfStaticPage: ORGANIZATIONS_DATA.usersNewGraphOfStaticPage,// for GraphOfStaticPage    \n    usersDelGraphOfStaticPage: ORGANIZATIONS_DATA.usersDelGraphOfStaticPage,// for GraphOfStaticPage\n    usersBlockGraphOfStaticPage: ORGANIZATIONS_DATA.usersBlockGraphOfStaticPage,// for GraphOfStaticPage\n    usersEndGraphOfStaticPage: ORGANIZATIONS_DATA.usersEndGraphOfStaticPage,// for GraphOfStaticPage\n    currentPointId: 1,\n    isFetchingUserOnline: false,\n    errorMessage: undefined,\n};\n\n \nconst adminPandelReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case AdminActionTypes.SET_CURRENT_POINT:\n            return {...state, currentPointId: action.payload};\n\n        case FetchData.GET_USERS_ONLINE_START:\n            return {...state, isFetchingUserOnline: true};\n\n        case FetchData.GET_USERS_ONLINE_SUCCESS:\n            return {...state, countUsersGraph: action.payload};\n\n        case FetchData.GET_USERS_ONLINE_START_DAY:\n            return {...state, countUsersOfStartDayGraph: action.payload};\n\n        case FetchData.GET_USERS_ONLINE_END_DAY:\n            return {...state, countUsersOfEndDayGraph: action.payload};\n\n        case FetchData.GET_USERS_ONLINE_FAILURE:\n            return {...state, errorMessage: action.payload };\n\n        case FetchData.GET_EVENTS_POINT_START: // for botton tab\n                return {...state, eventShortPoints: action.payload}; \n        \n        case FetchData.FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE: // for events page\n                return {...state, eventShortPoints: action.payload};\n\n        case FetchData.DATA_START_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE: // DATA for events page\n                const newDate = {...state.fetchDataForEventShortPoints, startDate: action.payload}\n                return {...state, fetchDataForEventShortPoints: newDate}; \n        \n        case FetchData.DATA_END_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE: // DATA for events page\n                const newEndDate = {...state.fetchDataForEventShortPoints, endDate: action.payload}\n                return {...state, fetchDataForEventShortPoints: newEndDate}; \n\n        case FetchData.GET_NEW_EVENTS_FOR_GRAPHIC_START:\n                return {...state, amountEventGraph: action.payload};\n\n        case FetchData.GET_END_EVENTS_FOR_GRAPHIC_START:\n                return {...state, amountEndEventGraph: action.payload};\n\n        case FetchData.FETCH_COUNT_OGH_FOR_DASHBOARD:\n                return {...state, countOGH: action.payload};\n\n        case FetchData.FETCH_AMOUNT_OGH_TO_DAY_FOR_DASHBOARD:\n                return {...state, amountOGHtoDay: action.payload};\n\n        case FetchData.FETCH_AMOUNT_OGH_TO_TREE_DAYS_FOR_DASHBOARD:\n            return {...state, amountOGHtoTreeDays: action.payload};\n\n        case FetchData.FETCH_AMOUNT_OGH_TO_WEEK_FOR_DASHBOARD:\n                return {...state, amountOGHtoWeek: action.payload};\n        \n        case FetchDataStaticPage.FETCH_NEW_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, newEventsGraphOfStaticPage: action.payload};\n                \n        case FetchDataStaticPage.FETCH_END_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, endEventsGraphOfStaticPage: action.payload};\n               \n        case FetchDataStaticPage.FETCH_DENY_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, denyEventsGraphOfStaticPage: action.payload};\n       \n        case FetchDataStaticPage.FETCH_USERS_ONLINE_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, usersOnlineGraphOfStaticPage: action.payload};\n\n        case FetchDataStaticPage.FETCH_NEW_MESSAGE_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, newMessageGraphOfStaticPage: action.payload};\n\n\n        case FetchDataStaticPage.FETCH_USERS_NEW_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, usersNewGraphOfStaticPage: action.payload};\n\n        case FetchDataStaticPage.FETCH_USERS_DEL_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, usersDelGraphOfStaticPage: action.payload};\n\n        case FetchDataStaticPage.FETCH_USERS_BLOCK_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, usersBlockGraphOfStaticPage: action.payload};\n\n\n        case FetchDataStaticPage.FETCH_USERS_END_TO_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, usersEndGraphOfStaticPage: action.payload};\n\n        case FetchDataStaticPage.FETCH_AMOUNT_NEW_OGH_FOR_GRAPHIC_TO_STATISTIC_PAGE:\n                return {...state, amountNewOGH: action.payload};\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport default adminPandelReducer;","export const UserActionTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\n};\n","import { UserActionTypes } from './user.types';\nimport data from '../adminPanelTrest/adminPanelTrest.data';\n\nconst INITIAL_STATE = {\n  curUser: data.currentUser\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        curUser: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport adminPanelTrest from './adminPanelTrest/adminPanelTrest.reducer';\nimport userReducer from './user/user.reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['organizations']\n}\n\nconst rootReducer = combineReducers({\n  adminPanel: adminPanelTrest,\n  user: userReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore } from 'redux-persist';\n\n// import logger from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [ReduxThunk];\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\n// if (process.env.NODE_ENV === 'development') {\n//     middlewares.push(logger);\n// }\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport const persistor = persistStore(store);\n\n// export default {store, persistor};","import { createSelector } from 'reselect';\n\nconst getSelectPoints = (state) => state.adminPanel;\n\n////////////////////////////////////////////////////\n\nexport const selectCurrentPointId = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.currentPointId\n)\n\nexport const selectAllPoints = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.points.items\n)\nexport const selectAllObjects = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.objects\n)\nexport const selectAllOrganisations = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.organizations\n)\nexport const selectCountUsers = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.countUsers\n)\nexport const selectCountOGH = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.countOGH\n) \n\n// export const selectCountEventGraph = createSelector(\n//     [getSelectPoints],\n//     adminPanel => adminPanel.countEventGraph\n// )\nexport const selectMessagesEventPoint = createSelector( \n    [getSelectPoints],\n    adminPanel => adminPanel.messagesEventPoints\n)\nexport const selectEventPoints = createSelector( \n    [getSelectPoints],\n    adminPanel => adminPanel.eventPoints\n)\n\nexport const selectStatusEventPoint = createSelector( \n    [getSelectPoints],\n    adminPanel => adminPanel.statusEnumEventPoint\n)\nexport const selectIsFetchingUserOnline = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.isFetchingUserOnline\n)\n\n\n\n// для \"graphics\" //////////////////////////////////////////////////// selectCountUsersOfStartDayGraph , selectCountUsersOfEndDayGraph\nexport const selectCountUsersGraph = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.countUsersGraph\n)\nexport const selectCountUsersOfStartDayGraph = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.countUsersOfStartDayGraph\n)\nexport const selectCountUsersOfEndDayGraph = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.countUsersOfEndDayGraph\n)\n\n//--\nexport const selectAmountEventGraph = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.amountEventGraph\n)\nexport const selectAmountEndEventGraph = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.amountEndEventGraph\n) \n\n\n\n// для \"Количество ОГХ\" ////////////////////////////////////////////////////\nexport const selectAmountOGH = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.countOGH\n)\n  \n\n// Для \"Ноые ОГХ\" ////////////////////////////////////////////////////\nexport const selectAmountToDayOGH = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.amountOGHtoDay\n) \nexport const selectAmountToWeekOGH = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.amountOGHtoWeek\n) \nexport const selectAmountToTreeDaysOGH = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.amountOGHtoTreeDays\n) \n \n /////////////- Для нижней таблицы главная Дашборд -/////////////////////////////////////// \n export const selectStatusEnumEventPointColor = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.statusEnumEventPointColor\n) \n\nexport const selectEventShortPoints = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.eventShortPoints\n)\n\n\n ///////////////////- for Statics Page -///////////////////////////////// \n export const fetchDataForEventShortPoints = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.fetchDataForEventShortPoints\n)\n //////////////////////////////////////////////////// \n\n// для \"- for Statics Page 2-\" ////////////////////////////////////////////////////\nexport const selectNewEventsGraphOfStaticPage = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.newEventsGraphOfStaticPage\n)\n\nexport const selectEndEventsGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.endEventsGraphOfStaticPage\n)\n\nexport const selectUsersOnlineGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.usersOnlineGraphOfStaticPage\n)\nexport const selectNewMessageGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.newMessageGraphOfStaticPage\n) \n\n\n //////////////////////////////////////////////////// \n //////////////////////////////////////////////////// \n //////////////////////////////////////////////////// \n  \n //amountNewOGH","\n\n\nimport AdminActionTypes,{ FetchData, FetchDataStaticPage } from './adminPanelTrest.types';\n// import Moment from 'react-moment';\nimport moment from 'moment';\n\n\nexport const setCurrentPoint = (item) => ({\n  type: AdminActionTypes.SET_CURRENT_POINT,\n  payload: item\n});\n\nexport const putDataUsersOnlineStart = () => ({\n  type: FetchData.GET_USERS_ONLINE_START\n});\nexport const putDataUsersOnlineError = (errorMessage) => ({\n  type: FetchData.GET_USERS_ONLINE_FAILURE,\n  payload: errorMessage\n});\n\n\n/// for first page for graphics\n\nexport const putDataUsersOnline = (items) => ({\n  type: FetchData.GET_USERS_ONLINE_SUCCESS,\n  payload: items \n});\n\nexport const putDataUsersOfStartDayOnline = (items) => ({ \n  type: FetchData.GET_USERS_ONLINE_START_DAY,\n  payload: items \n});\n\nexport const putDataUsersOfEndDayOnline = (items) => ({\n  type: FetchData.GET_USERS_ONLINE_END_DAY,\n  payload: items \n});\n \nexport const putEventsPointShort = (items) => ({\n  type: FetchData.GET_EVENTS_POINT_START,\n  payload: items \n});\n/////////// -- for Statics page --////////////////////////////////////////////////\n\nexport const putEventsForPeriodShort = (items) => ({\n  type: FetchData.FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE,\n  payload: items \n});\n\nexport const dataStartforFetchEventsForPeriod = (startDate) => ({\n  type: FetchData.DATA_START_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE,\n  payload: startDate \n});\n\nexport const dataEndforFetchEventsForPeriod = (endDate) => ({\n  type: FetchData.DATA_END_FOR_FETCH_EVENT_TYPE_OF_DATE_FOR_STATISTIC_PAGE,\n  payload: endDate \n});\n\n/////////// -- for Graphics --////////////////////////////////////////////////\nexport const putNewEventsGraphic = (items) => ({\n  type: FetchData.GET_NEW_EVENTS_FOR_GRAPHIC_START,\n  payload: items \n});\n\nexport const putEndEventsGraphic = (items) => ({\n  type: FetchData.GET_END_EVENTS_FOR_GRAPHIC_START, //amountEndEventGraph\n  payload: items \n});\n///////////////////////////////////////////////////////////\n\nexport const putOGH = (items) => ({\n  type: FetchData.FETCH_COUNT_OGH_FOR_DASHBOARD, //amountEndEventGraph\n  payload: items \n});\n\nexport const putOGHforToDay = (items) => ({\n  type: FetchData.FETCH_AMOUNT_OGH_TO_DAY_FOR_DASHBOARD, //amountEndEventGraph\n  payload: items \n});\nexport const putOGHforWeek = (items) => ({\n  type: FetchData.FETCH_AMOUNT_OGH_TO_WEEK_FOR_DASHBOARD, //amountEndEventGraph\n  payload: items \n});\nexport const putOGHforTreeDays = (items) => ({\n  type: FetchData.FETCH_AMOUNT_OGH_TO_TREE_DAYS_FOR_DASHBOARD, //amountEndEventGraph\n  payload: items \n});\n\n//////////////////////////////////////////////////\n\n\nexport const setDataUsersOnlineToGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_USERS_ONLINE_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\nexport const setDataNewEventToGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_NEW_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\nexport const setDataEndEventToGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_END_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\nexport const setDataDenyEventToGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_DENY_EVENT_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\nexport const setDataNewMessageToGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_NEW_MESSAGE_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\n/////////////////////- TAB 3-//////////////////////////////////// \n\nexport const setDataUsersNewGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_USERS_NEW_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\nexport const setDataUsersDelGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_USERS_DEL_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\nexport const setDataUsersEndGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_USERS_END_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\nexport const setDataUsersBlockGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_USERS_BLOCK_TO_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n// for static page, tab3\nexport const setNewOGHGraphicToStaticPage = (items) => ({\n  type: FetchDataStaticPage.FETCH_AMOUNT_NEW_OGH_FOR_GRAPHIC_TO_STATISTIC_PAGE,\n  payload: items \n});\n\n/////////////////////////////////////////////////\nconst rootURL = 'https://ismggt.ru'; \nconst urlUserOnline = rootURL + '/query/users/online';\nconst urlUserOnlineByInterval = rootURL + '/query/users/online/byinterval'; \nconst urlQueryAmount = rootURL + '/query/events/amount'; \nconst urlQueryObjTotal = rootURL + '/query/objects/total'; \n//'https://ismggt.ru/query/objects/total'\n\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return await response.json(); // parses JSON response into native JavaScript objects\n}\n\n\n\n \n\n// Для верхней таблицы \"graphics\" пользователей он-лайн\nexport const fetchAmountUsersForGraphicsAsync = (startDate='2021-02-12T08:00:00.000Z',endDate='2021-02-12T19:02:00.000Z')  => {\n  \n  return (dispatch) => {\n    // dispatch(putDataUsersOnlineStart());\n    // https://ismggt.ru/\n    // postData('https://ismggt.ru/query/users/online', { startDate: startDate, endDate: endDate})\n    postData(urlUserOnline, { startDate: startDate, endDate: endDate})\n      .then((users) => {\n        // let chartData = users.data.chartData.slice(7,17);\n        // console.log('query/users/online', users); // JSON data parsed by `response.json()` call\n        dispatch(putDataUsersOnline(users));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  }; \n};\n\n\n\n\n\n\n\n\n\n\n\n\n// Для верхней таблицы \"graphics\" пользователей он-лайн\n// putDataUsersOfStartDayOnline  putDataUsersOfEndDayOnline\nexport const fetchAmountUsersOfStartDayGraphicsAsync = (startDate='2021-02-16T00:00:00.000Z',endDate='2021-02-12T07:02:00.000Z')  => {\n  return (dispatch) => {\n    postData(urlUserOnlineByInterval, { startDate: startDate, endDate: endDate})\n      .then((users) => {\n        // let chartData = users.data.chartData.slice(7,17);\n        // console.log('query/users/online byinterval  start day', users); // JSON data parsed by `response.json()` call\n        dispatch(putDataUsersOfStartDayOnline(users));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n// fetchAmountUsersOfStartDayGraphicsAsync fetchAmountUsersOfEndDayGraphicsAsync\nexport const fetchAmountUsersOfEndDayGraphicsAsync = (startDate='2021-02-12T08:00:00.000Z',endDate='2021-02-12T18:00:00.000Z')  => {\n  // console.log('fetchAmountUsersOfEndDayGraphicsAsync',startDate, endDate);\n\n  return (dispatch) => {\n    postData(urlUserOnlineByInterval, { startDate: startDate, endDate: endDate})\n      .then((users) => {\n        // let chartData = users.data.chartData.slice(7,17);\n        // console.log('query/users/online byinterval end day', users); // JSON data parsed by `response.json()` call\n        dispatch(putDataUsersOfEndDayOnline(users));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\n\n// Для верхней таблицы \"graphics\" новые события\nexport const fetchAmountNewEventsForGraphicAsync = (startDate='2021-02-12T08:00:00.000Z',endDate='2021-02-12T18:00:00.000Z') => {\n  \n  return (dispatch) => {\n    // postData('https://ismggt.ru/query/events/amount', {type: 'new_rec', startDate: '2021-02-15T01:00:00.000Z'})\n    postData(urlQueryAmount, {type: 'new_rec', startDate: startDate, endDate: endDate})\n      .then((eventss) => {\n        // console.log('events new_rec',eventss);\n        dispatch(putNewEventsGraphic(eventss)); \n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n// Для верхней таблицы \"graphics\" завершенные события\nexport const fetchAmountEndEventsForGraphicAsync = (startDate='2021-02-12T08:00:00.000Z',endDate='2021-02-12T18:00:00.000Z') => {\n  return (dispatch) => {\n    postData(urlQueryAmount, {type: 'done_rec', startDate: startDate, endDate: endDate})\n      .then((eventss) => {\n        // console.log('events done_rec',eventss);\n        dispatch(putEndEventsGraphic(eventss));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n// Для нежней таблицы \"Количество ОГХ\"\nexport const fetchAmountOGHForDashboardAsync = () => {\n  return (dispatch) => {\n    postData(urlQueryObjTotal, {})\n      .then((objOGH) => {\n        // console.log('objOGH',objOGH);\n        dispatch(putOGH(objOGH));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\nexport const fetchAmountOGHToDayAsync = () => {\n\n  var start0 = moment().startOf('day').toISOString();\n  // console.log('start to query/objects/total',start0);\n\n  return (dispatch) => {\n    postData('https://ismggt.ru/query/objects/total', {startDate: start0})\n      .then((objTodayOGH ) => {\n        // console.log('objTodayOGH (query/objects/total)',objTodayOGH);\n        dispatch(putOGHforToDay(objTodayOGH));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\nexport const fetchAmountOGHToThreeDaysAsync = () => {\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - 3); \n  \n  return (dispatch) => {\n    postData('https://ismggt.ru/query/objects/total', {startDate: startDate})\n      .then((objMonthOGH) => {\n        // console.log('objTreeDayshOGH',objMonthOGH);\n        dispatch(putOGHforTreeDays(objMonthOGH));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\nexport const fetchAmountOGHToWeekAsync = () => {\n  const startDate = new Date();\n  // console.log(startDate.getDate() - 7);\n  startDate.setDate(startDate.getDate() - 7); \n  // console.log('startDate',startDate);\n\n\n  return (dispatch) => {\n    postData('https://ismggt.ru/query/objects/total', {startDate: startDate.toISOString()})\n      .then((objWeekOGH) => {\n        // console.log('objWeekOGH',objWeekOGH);\n        dispatch(putOGHforWeek(objWeekOGH));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\n// Для нежней таблицы \"новых событий\"\nexport const fetchEventsPointShortAsync = () => {\n  return (dispatch) => {\n    postData('https://ismggt.ru/query/events/last/short', {limit:20})\n      .then((eventss) => {\n        dispatch(putEventsPointShort(eventss));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n// Для страницы отчета о \"новых событиях\"\nexport const fetchEventForPeriodAsync = ({startDate, endDate}) => {\n\n  if(!startDate){\n    startDate = '2021-02-04T00-00-00.000Z';\n  }\n  if(!startDate){\n    endDate = '2021-02-11T22-00-00.000Z';\n  }\n  return (dispatch) => {\n    // console.log('startDate, endDate',startDate, endDate);\n    postData('https://ismggt.ru/query/events/last/short', {limit:20, startDate:startDate, endDate:endDate})\n      .then((eventss) => {\n        // console.log('postData then, eventss',eventss);\n        dispatch(putEventsForPeriodShort(eventss));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\n// Для страницы отчетов \"новых событий\"\n\nexport const fetchEventFromPeriodAsync = (start, end) => {\n  return (dispatch) => { \n    const startDate = start;\n    const endDate = end;\n    postData('https://ismggt.ru/query/events/last/short', {limit:20, startDate:startDate, endDate:endDate}) //'2021-02-03T22:00:00.000Z'\n      .then((eventss) => {\n        // console.log('postData then, eventss',eventss);\n        dispatch(putEventsForPeriodShort(eventss));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\n//fetchAllEventsGraphicAsynctype(type,startDate,endDate)\n//fetchAllUsersGraphicAsync(startDate,endDate)\n\n// Для страницы 2 отчетов \"новых событий\"\nexport const fetchAllEventsGraphicAsync = (type='new_rec',startDate='2021-02-12T08:00:00.000Z',endDate='2021-02-15T18:00:00.000Z') => {\n  return (dispatch) => {\n    postData('https://ismggt.ru/query/events/amount', {type: type, startDate: startDate, endDate: endDate})\n      .then((eventss) => {\n        // console.log('events all',eventss);\n        if (type === 'new_rec'){\n          dispatch(setDataNewEventToGraphicToStaticPage(eventss));\n          \n        }else if (type === 'done_rec'){\n          dispatch(setDataEndEventToGraphicToStaticPage(eventss));\n          \n        }else if (type === 'deny_rec'){\n          dispatch(setDataDenyEventToGraphicToStaticPage(eventss));\n          \n        }else if (type === 'new_msg'){\n          dispatch(setDataNewMessageToGraphicToStaticPage(eventss));\n          \n        }\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\n\n\n\n// Для страницы 2 отчетов \"новых событий\"\nexport const fetchAllUsersGraphicAsync = (startDate='2021-02-08T08:00:00.000Z',endDate='2021-02-15T18:00:00.000Z')  => {\n  return (dispatch) => {\n    // dispatch(putDataUsersOnlineStart());\n     \n    postData('https://ismggt.ru/query/users/online', { startDate: startDate, endDate: endDate})\n      .then((users) => {\n        // let chartData = users.data.chartData.slice(7,17);\n        // console.log('fetchAllUsersGraphicAsync ', users); // JSON data parsed by `response.json()` call\n        dispatch(setDataUsersOnlineToGraphicToStaticPage(users));\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\n//// setDataUsersNewGraphicToStaticPage setDataUsersDelGraphicToStaticPage setDataUsersEndGraphicToStaticPage setDataUsersBlockGraphicToStaticPage\n// Для страницы 2 отчетов \"tab 3\"\nexport const fetchUsersThirdTabStaticPageGraphicAsync = (type, startDate='2021-02-08T08:00:00.000Z',endDate='2021-02-15T18:00:00.000Z')  => {\n  return (dispatch) => {\n    // dispatch(putDataUsersOnlineStart());\n     \n    postData('https://ismggt.ru/query/events/last/short', {type: type, startDate: startDate, endDate: endDate})\n      .then((users) => {\n        // let chartData = users.data.chartData.slice(7,17);\n        if (type === 'new_user'){\n          dispatch(setDataUsersNewGraphicToStaticPage(users));\n          \n        }else if (type === 'del_user'){\n          dispatch(setDataUsersDelGraphicToStaticPage(users));\n          \n        }else if (type === 'end_user'){\n          dispatch(setDataUsersEndGraphicToStaticPage(users));\n          \n        }else if (type === 'block_user'){\n          dispatch(setDataUsersBlockGraphicToStaticPage(users));\n          \n        }\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n \n//// \n// Для страницы 2 отчетов \"tab 3\"\nexport const fetchNewOGHThirdTabStaticPageGraphicAsync = (type, startDate='2021-01-08T08:00:00.000Z',endDate='2021-02-19T18:00:00.000Z')  => {\n  return (dispatch) => {\n    // dispatch(putDataUsersOnlineStart());\n    // console.log('fetchNewOGHThirdTabStaticPageGraphicAsync start');\n    postData('https://ismggt.ru/query/objects/total', {startDate: startDate, endDate: endDate})\n      .then((users) => {\n        // let chartData = users.data.chartData.slice(7,17);\n        // console.log('fetchNewOGHThirdTabStaticPageGraphicAsync ',users);\n        if (type === 'new_obj'){\n          dispatch(setNewOGHGraphicToStaticPage(users));\n          \n        }else if (type === 'del_user2'){\n          dispatch(setDataUsersDelGraphicToStaticPage(users));\n          \n        }else if (type === 'end_user2'){\n          dispatch(setDataUsersEndGraphicToStaticPage(users));\n          \n        }else if (type === 'block_user2'){\n          dispatch(setDataUsersBlockGraphicToStaticPage(users));\n          \n        }\n      })\n      .catch(error => dispatch(putDataUsersOnlineError(error.message)));\n  };\n};\n\n\n\n\n\n  \n\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { concat, reduce } from 'lodash'; \n\nimport Avatar from '@material-ui/core/Avatar';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport { selectCountUsersGraph, selectIsFetchingUserOnline, selectAmountEventGraph, selectAmountEndEventGraph, selectCountUsersOfStartDayGraph , selectCountUsersOfEndDayGraph } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \nimport { fetchAmountUsersForGraphicsAsync,fetchAmountNewEventsForGraphicAsync,fetchAmountEndEventsForGraphicAsync,fetchAmountUsersOfStartDayGraphicsAsync, fetchAmountUsersOfEndDayGraphicsAsync } from '../../store/adminPanelTrest/adminPanelTrest.actions'; \n\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend\n} from 'recharts';\n\n \n\nlet data = [\n  {\n    name: '(00-07)', Events: null, Users: null, Closed: null, amt: 3,\n  },\n  {\n    name: '08:00', Events: null, Users: null, Closed: null, amt: 3,\n  },\n  {\n    name: '09:00', Events: null, Users: null, Closed: null, amt: 3,\n  },\n  {\n    name: '10:00', Events: null, Users: null, Closed: null, amt: 4,\n  },\n  {\n    name: '11:00', Events: null, Users: null, Closed: null, amt: 40,\n  },\n  {\n    name: '12:00', Events: null, Users: null, Closed: null, amt: 14,\n  },{\n    name: '13:00', Events: null, Users: null, Closed: null, amt: 14,\n  },\n  {\n    name: '14:00', Events: null, Users: null, Closed: null, amt: 21,\n  },\n  {\n    name: '15:00', Events: null, Users: null, Closed: null, amt: 21,\n  },\n  {\n    name: '16:00', Events: null, Users: null, Closed: null, amt: 32,\n  },\n  {\n    name: '17:00', Events: null, Users: null, Closed: null, amt: 30,\n  },\n  {\n    name: '18:00', Events: null, Users: null, Closed: null, amt: 0,\n  },\n  {\n    name: '(19-23)', Events: null, Users: null, Closed: null, amt: 0,\n  },\n];\n\nclass LineChartWithXAxisPading extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/g03265a4/';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      date: new Date()\n    };\n    this.fetchAll = this.fetchAll.bind(this);\n    this.setOffset = this.setOffset.bind(this);\n  }\n\n  componentDidMount() {\n    // const { fetchCollectionsStartAsync } = this.props;\n    this.fetchAll();\n  }\n\n\n\n  setOffset(ofs) {\n    const dd = new Date();\n    const ofsss = ofs + this.state.offset;\n    dd.setDate(dd.getDate() + ofsss);\n\n    this.setState(({offset}) => ({\n      date: dd,\n      offset: offset + ofs\n    }))\n\n  }\n\n  fetchAll(ofss=0) {\n    const{fetchAmountUsersForGraphicsAsync,fetchAmountUsersOfStartDayGraphicsAsync,fetchAmountUsersOfEndDayGraphicsAsync, fetchAmountNewEventsForGraphicAsync,fetchAmountEndEventsForGraphicAsync} = this.props;\n\n    if (ofss === 1 && this.state.offset === 0){return}\n\n    // console.log('this.state.offset',this.state.offset);\n    \n    const ofs = ofss + this.state.offset;\n    // console.log('ofs',ofs);\n\n    this.setOffset(ofss);\n\n    const today = new Date();\n    today.setDate(today.getDate() + ofs);\n    \n    const currentHours = parseInt(today.toISOString().split('T')[1].slice(0,2)) + 3;\n    // console.log('currentHours',currentHours);\n\n    const todayStartDay = today.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    const todayStartDay2 = today.toISOString().split('T')[0] + 'T07:00:00.000Z';\n\n    const todayStart = today.toISOString().split('T')[0] + 'T08:00:00.000Z';\n    let todayEnd = today.toISOString().split('T')[0] + 'T19:00:00.000Z';\n\n    const StartDay = today.toISOString().split('T')[0] + 'T00:00:00.000Z';\n    let EndDay = today.toISOString().split('T')[0] + 'T23:00:00.000Z';\n    \n\n    \n    fetchAmountUsersOfStartDayGraphicsAsync(todayStartDay,todayStartDay2);\n\n    if (currentHours > 18){\n      const todayEndDay = today.toISOString().split('T')[0] + 'T20:00:00.000Z';\n      const todayEndDay2 = today.toISOString().split('T')[0] + 'T23:00:00.000Z';\n      fetchAmountUsersOfEndDayGraphicsAsync(todayEndDay,todayEndDay2);\n    }else {\n      todayEnd = today;\n      todayEnd.setDate(today.getDate() + 2);\n      // console.log('todayEnd',todayEnd);\n\n      EndDay = todayEnd;\n    }\n\n    fetchAmountUsersForGraphicsAsync(todayStart,todayEnd);\n    \n    fetchAmountNewEventsForGraphicAsync(StartDay,EndDay);\n    fetchAmountEndEventsForGraphicAsync(StartDay,EndDay);\n  }\n\n\nrender() {\n    const {countUsersGraph, isFetchingUserOnline, selectAmountNewEvent, selectAmountEndedEvent,selectCountUsersOfStartDay , selectCountUsersOfEndDay} = this.props;\n\n    const { date } = this.state;\n    const today = new Date();\n    const stateDate = date.getDate().toString();\n    const today3=today.getDate().toString();\n    const nowHours=today.getHours().toString();\n    // console.log('nowHours',nowHours);\n    let isToday = false;\n    if (stateDate === today3) {\n      isToday = true;\n    }\n    let usersCount = 0;\n    let eventsAmount = 0;\n    let endedAmount = 0;\n\n    const usersLine = countUsersGraph.data.chartData;\n    const usersLineStartDay = selectCountUsersOfStartDay.online;\n    const usersLineEndDay = selectCountUsersOfEndDay.online;\n\n    const eventsLine = selectAmountNewEvent.data.chartData;\n    const endedLine = selectAmountEndedEvent.data.chartData;\n\n   let ddddd = new Date().toISOString();\n   let nowD = ddddd.split('T')[1].slice(0,2);\n\n  //  // console.log('ddddd',ddddd.split('T')[1].slice(0,2)); \n   \n    const newObj = {...data[0], Users: usersLineStartDay};\n    data[0] = newObj;\n\n    let max_hours = 12;\n    if(isToday) {\n      max_hours = parseInt(nowHours) -6;\n    }\n\n    // for (let index = 1; index < 12; index++) {\n    for (let index = 1; index < max_hours; index++) {\n\n      const indexMinus = index -1;\n      const newObjDay = {...data[index], Users: usersLine[indexMinus]};\n      data[index] = newObjDay;\n      \n    }\n\n    const newObjEndDay = {...data[12], Users: usersLineEndDay};\n    data[12] = newObjEndDay;\n\n    const allArray = concat(usersLine, usersLineStartDay, usersLineEndDay);\n    usersCount = Math.max.apply(Math, allArray);\n    // var max_of_array = Math.max.apply(Math, array);\n    // // console.log('data',data);\n    \n     \n\n    // _.reduce([1, 2], function(sum, n) {\n    //   return sum + n;\n    // }, 0);\n    // => 3\n\n    //////////////////////////////////////\n\n    const startDataNewEvent = eventsLine.slice(0,7);\n    const startDataNewEventSum = reduce(startDataNewEvent,(sum,n)=>(sum + n),0);\n    const newObjs = {...data[0], Events: startDataNewEventSum};\n    data[0] = newObjs;\n\n    if(isToday) {\n      max_hours = parseInt(nowHours) +1;\n      if (max_hours >19){\n        max_hours = 19;\n      }\n    }else {\n      max_hours = 19;\n    }\n\n    const startNewEvent = eventsLine.slice(8,max_hours);\n    startNewEvent.forEach((el,index) => {\n      const indexPlus = index +1;\n      const newObj = {...data[indexPlus], Events: el};\n      data[indexPlus] = newObj;\n      if(nowD === data[indexPlus].name.slice(0,2)){\n        // eventsAmount = el\n      }\n    });\n    \n    eventsLine.forEach((el,index) => {\n      eventsAmount += el\n    });\n\n    //////////////////////////////////////\n\n    const endDataNewEvent = eventsLine.slice(19,23);\n    const endDataNewEventSum = reduce(endDataNewEvent,(sum,n)=>(sum + n),0);\n    const newObjn = {...data[12], Events: endDataNewEventSum};\n    data[12] = newObjn;\n\n\n    //close\n    const startDataClose = endedLine.slice(0,7);\n    const startDataCloseSum = reduce(startDataClose,(sum,n)=>(sum + n),0);\n    const newObjc = {...data[0], Closed: startDataCloseSum};\n    data[0] = newObjc;\n\n    const startClose = endedLine.slice(8,max_hours);\n    startClose.forEach((el,index) => {\n      const indexPlus = index +1;\n      const newObj = {...data[indexPlus], Closed: el};\n      data[indexPlus] = newObj;\n\n      if(nowD === data[indexPlus].name.slice(0,2)){\n        // endedAmount = el\n      }\n    });\n\n    endedLine.forEach((el,index) => {\n      endedAmount += el\n    });\n\n    const endDataClose = endedLine.slice(19,23);\n    const endDataCloseSum = reduce(endDataClose,(sum,n)=>(sum + n),0);\n    const newObjcs = {...data[12], Closed: endDataCloseSum};\n    data[12] = newObjcs;\n\n    \n\n\n    // // console.log(window.innerWidth);\n    const styleLblUsersGraphic3 = !isFetchingUserOnline ? {position: 'absolute', top: '-40px', right: '-15px', color:'#483d93',display: 'flex', alignItems: 'center'}\n    : {position: 'absolute', top: '-30px', right: '0px', color:'#ccc',display: 'flex', alignItems: 'center'};\n    \n    const styleLblUsersGraphic = !isFetchingUserOnline ? {position: 'absolute', top: '25px', right: '10px', color:'white', backgroundColor:'rgb(136, 132, 216)',width:'30px',height: 30}\n    : {position: 'absolute', top: '25px', right: '10px', color:'#ccc',width:'30px',height: 30};\n\n    const styleLblEventsGraphic = !isFetchingUserOnline ? {position: 'absolute', top: '60px', right: '10px', color:'black', backgroundColor:'rgb(130, 202, 157)',width:'30px',height: 30}\n    : {position: 'absolute', top: '60px', right: '10px', backgroundColor:'#91c1b4', color:'#ccc',width:'30px',height: 30};\n\n    \n    const styleLblEndedGraphic = !isFetchingUserOnline ? {position: 'absolute', top: '100px', right: '10px', color:'black', backgroundColor:'rgb(255, 192, 0)',width:'30px',height: 30}\n    : {position: 'absolute', top: '100px', right: '10px', color:'#ccc',width:'30px',height: 30};\n\n\n    const styleBtnUpdateUsersGraphic = isFetchingUserOnline ? {position: 'absolute', bottom: '10px', right: '18px', cursor:'pointer', transition: 'transform 0.2s'}\n    :{position: 'absolute', bottom: '10px', right: '15px', cursor:'pointer', transform: 'rotate(-45deg)', color:'red'};\n    \n    \n    const winWidth = window.innerWidth;\n    let windthLine = 500;\n    let leftLine = 30;\n    let rightLine = 30;\n\n    if (winWidth < 400){\n      windthLine = 250;\n      leftLine = 10;\n      rightLine = 10;\n    }\n     \n    return (\n      <div id='graphics' style={{ position:'relative'}}>\n        <LineChart width={windthLine} height={200} data={data} >\n          <CartesianGrid strokeDasharray=\"8 1\" />\n          <XAxis dataKey=\"name\" padding={{ left: leftLine, right: rightLine }} />\n          <YAxis />\n          <Tooltip />\n          <Legend  style={{bottom: '0px'}}/>\n          <Line type=\"monotone\" dataKey='Users' stroke=\"#8884d8\" name='Польз. он-лайн' activeDot={{ r: 8 }} />\n          <Line type=\"monotone\" dataKey=\"Events\" name='Новые события' stroke=\"#82ca9d\" />\n          <Line type=\"monotone\" dataKey=\"Closed\" name='Закрытые событ.' stroke=\"#FFc000\" />\n          \n        </LineChart>\n       \n        <div style={styleLblUsersGraphic3}>\n          <ArrowLeftIcon onClick={() => {this.fetchAll(-1)}} color=\"secondary\" />\n            {date.toISOString().slice(8,10)}/{date.toISOString().slice(5,7)} \n          <ArrowRightIcon disabled={isToday} onClick={() => {this.fetchAll(1)}}  color={isToday ? 'disabled' : 'error'}/>\n        </div>\n        \n        <div><Avatar  style={styleLblUsersGraphic}>{usersCount}</Avatar></div>\n        <div><Avatar  style={styleLblEventsGraphic}>{eventsAmount}</Avatar></div>\n        <div ><Avatar style={styleLblEndedGraphic}>{endedAmount}</Avatar></div>\n        <RefreshIcon id='btnUpdateGraphicUsers'  style={styleBtnUpdateUsersGraphic} onClick={() => {this.fetchAll(0)}}/>\n      </div>\n    );\n  } \n} \n\n \nconst mapStateToProps = createStructuredSelector ({\n  countUsersGraph: selectCountUsersGraph,\n  selectCountUsersOfStartDay: selectCountUsersOfStartDayGraph,\n  selectCountUsersOfEndDay: selectCountUsersOfEndDayGraph,\n  isFetchingUserOnline: selectIsFetchingUserOnline,\n  selectAmountNewEvent: selectAmountEventGraph,\n  selectAmountEndedEvent: selectAmountEndEventGraph,\n});\n \n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAmountUsersForGraphicsAsync: (startDate, endDate) => dispatch(fetchAmountUsersForGraphicsAsync(startDate, endDate)),\n  fetchAmountUsersOfStartDayGraphicsAsync: (startDate, endDate) => dispatch(fetchAmountUsersOfStartDayGraphicsAsync(startDate, endDate)),\n  fetchAmountUsersOfEndDayGraphicsAsync: (startDate, endDate) => dispatch(fetchAmountUsersOfEndDayGraphicsAsync(startDate, endDate)),\n  fetchAmountNewEventsForGraphicAsync: (startDate, endDate) => dispatch(fetchAmountNewEventsForGraphicAsync(startDate, endDate)),\n  fetchAmountEndEventsForGraphicAsync: (startDate, endDate) => dispatch(fetchAmountEndEventsForGraphicAsync(startDate, endDate)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChartWithXAxisPading);\n ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport moment from 'moment/moment';\n\n// import Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nimport { selectAmountOGH } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\n//countOGH: \n// { dataTime: '16:20 (21.01.21)',\n//   data:  {\n//     objTotal: 100,\n//     objMggt: 30,\n//     objRelatives: 70,} }\n\nconst Deposits = ({ amountOGH }) => {\n  const classes = useStyles();\n  let tt = moment(amountOGH.dataTime).toISOString();\n  //tt 2021-02-08T21:12:01.440Z\n  // tt.format(\"DD MMM (HH:mm) \");\n  //tt Tue Feb 09 2021 00:12:01 GMT+0300 (Moscow Standard Time)\n  // tt 2021-02-08T21:16:02.549Z\n  let lastDate = tt.split('T')[0].split('-');\n  // console.log('lastDate',lastDate);\n  //lastDate 2021-02-08\n  return (\n    <React.Fragment>\n      {/* <Title>Количество ОГХ ({moment(amountOGH.data.objTotal).format(\"dddd, MMM DD at HH:mm a\")})</Title> */}\n      <Title>Количество ОГХ ({amountOGH.data.objTotal})</Title>\n      <hr color=\"blue\" style={{width: '100%',opacity: 0.5, marginTop: 0, marginBottom: 0}}/>\n      <Typography component=\"p\" variant=\"h4\">\n        {amountOGH.data.objMgtt}\n      </Typography>\n      <Typography component=\"p\"  >\n      принадлежащих нам\n      </Typography>\n      <hr color=\"gray\" style={{width: '100%',opacity: 0.5, marginTop: 0, marginBottom: 0}}/>\n      <Typography component=\"p\" variant=\"h4\">\n      {amountOGH.data.objRelatives}\n      </Typography>\n      <Typography component=\"p\"  >\n      объектов смежников\n      </Typography>\n      <hr color=\"gray\" style={{width: '100%',opacity: 0.5, marginTop: 0, marginBottom: '4px'}}/>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        Данные на {lastDate[2]}/{lastDate[1]}/{lastDate[0]}\n         \n      </Typography>\n      <div>\n        {/* <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          Смотреть подробно\n        </Link> */}\n      </div>\n    </React.Fragment>\n  );\n}\n \n\nconst mapStateToProps = createStructuredSelector ({\n  amountOGH: selectAmountOGH,\n  // isFetchingUserOnline: selectIsFetchingUserOnline,\n  // selectAmountEvent: selectAmountEventGraph,\n});\n \n// const mapDispatchToProps = (dispatch) => ({\n//   fetchAmountOGH: () => dispatch(fetchAmountOGHForDashboardAsync()),\n// });\nexport default connect(mapStateToProps)(Deposits);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n// import Link from '@material-ui/core/Link';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\n\n\nimport { selectAmountToDayOGH, selectAmountToWeekOGH, selectAmountToTreeDaysOGH } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \n\nconst Deposits = ({amountToDayOGH,amountToWeekOGH, amountToTreeDaysOGH}) => {\n  // const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Новые ОГХ</Title>\n      <hr color=\"blue\" style={{width: '100%',opacity: 0.5, marginTop: 0, marginBottom: 0}}/>\n      <Typography component=\"p\" variant=\"h6\" style={{display:'flex',justifyContent:'space-between'}}>\n      {amountToDayOGH.data.objTotal} \n      <span style={{color: 'grey',opacity: 0.8, marginRight: '4px', textAlign:'end'}}>  объектов за день</span>\n      </Typography>\n      {/* <Typography component=\"p\"  >\n      всего/МГТТ/смежн. сегодня\n      </Typography> */}\n      <hr color=\"gray\" style={{width: '100%',opacity: 0.5, marginTop: 0, marginBottom: 0}}/>\n      <Typography component=\"p\" variant=\"h6\" style={{display:'flex',justifyContent:'space-between'}}>\n      {amountToTreeDaysOGH.data.objTotal} \n      <span style={{color: 'grey',opacity: 0.8, marginRight: '4px', textAlign:'end'}}>  объектов за 3 дня</span>\n      </Typography>\n      {/* <Typography component=\"p\"  >\n      всего/МГТТ/смежн.  за неделю\n      </Typography> */}\n      <hr color=\"gray\" style={{width: '100%',opacity: 0.5, marginTop: 0, marginBottom: '4px'}}/>\n      <Typography component=\"p\" variant=\"h6\" style={{display:'flex',justifyContent:'space-between'}}>\n        {amountToWeekOGH.data.objTotal} \n        <span style={{color: 'grey',opacity: 0.8, marginRight: '4px', textAlign:'end'}}>  объектов за 7 дней</span>\n      </Typography>\n      <Typography component=\"p\"  >\n      {/* всего/МГТТ/смежн.  за месяц */}\n      </Typography>\n      <div>\n        {/* <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          Смотреть подробно\n        </Link> */}\n      </div>\n    </React.Fragment>\n  );\n}\n \nconst mapStateToProps = createStructuredSelector ({\n  amountToDayOGH: selectAmountToDayOGH,\n  amountToWeekOGH: selectAmountToWeekOGH, \n  amountToTreeDaysOGH: selectAmountToTreeDaysOGH,\n  // countUsersGraph: selectCountUsersGraph,\n  // statusEventPoint: selectStatusEventPoint,\n});\n\n\nexport default connect(mapStateToProps)(Deposits);","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport HistoryChange from '@material-ui/icons/History';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst MainListItems = ( {location} ) => (\n  <div>\n    <MenuItem   component={Link} to=\"/\"    selected={location.pathname === '/'}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Главная\" />\n    </MenuItem>\n    <MenuItem  component={Link} to=\"/ogh\"  selected={location.pathname === '/ogh'}>\n      <ListItemIcon>\n        <HistoryChange />\n      </ListItemIcon>\n      <ListItemText primary=\"Таблица ОГХ\" />\n    </MenuItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Пользователи\"  selected={location.pathname === '/ogh'} disabled style={{color:'rgb(0 0 0 / 21%)'}}/>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Текущая статистика\"  selected={location.pathname === '/ogh'} disabled style={{color:'rgb(0 0 0 / 21%)'}}/>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Управление\" selected={location.pathname === '/ogh'} disabled style={{color:'rgb(0 0 0 / 21%)'}}/>\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Статистика</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Текущий месяц\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Прошлый квартал\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"От ноября 2020\" />\n    </ListItem>\n  </div>\n);\n\nexport default withRouter(MainListItems);","import React from \"react\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport PersonIcon from '@material-ui/icons/Person';\nimport List from '@material-ui/core/List';\n\n\nimport MainListItems from './listItems';\n\n// import { Link } from \"react-router-dom\";\n\n// import { connect } from 'react-redux';\n\n\n\n// import { setCurrentUser } from '../../store/user/user.actions';\n\n// import { selectCurrentUser } from '../../store/user/user.selectors';\n\nimport './header.styles.scss';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },news: {\n      '&:hover': {\n        background: \"#f00\",\n     },\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }));\n\n\n\nconst Header = () => {\n    const [open, setOpen] = React.useState(false);\n    const classes = useStyles();\n\n    const handleDrawerOpen = () => { setOpen(true); };\n    const handleDrawerClose = () => { setOpen(false); };\n\n    const sssd = () => {};\n    \n    // let user = currentUser ? currentUser.login : '';\n    let user = '';\n\n    // console.log('render header');\n    return (\n        <div className=\"Admin-header\">\n        \n        <AppBar position=\"fixed\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            // style={{display:'none'}}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n           <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Главная страница\n          </Typography>\n          {/* <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        // style={{display:'none'}}\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n        <div style={{marginLeft: '5px', display:'flex'}}>\n          <Avatar className={classes.avatar}>\n            <PersonIcon />\n          </Avatar> \n          <div style={{marginLeft: '15px', lineHeight:'40px'}}>{user}</div></div>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List >\n          <MainListItems sssd={sssd}/>\n        </List>\n        <Divider />\n        {/* <List>{secondaryListItems}</List> */}\n      </Drawer>\n        </div>\n    )\n    \n}\n \n\n// const mapDispatchToProps = dispatch => ({\n//     logOutUser: () => dispatch(setCurrentUser(null))\n//   });\n\n// const mapStateToProps = (state) => ({\n//     currentUser: selectCurrentUser(state),\n// });\n\n  // export default connect(mapStateToProps, mapDispatchToProps)(Header);\n  export default Header;","import * as React from 'react';\nimport _ from \"lodash\";\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\n\nimport { selectEventShortPoints, selectStatusEventPoint, selectStatusEnumEventPointColor } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \n\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n//   { field: 'id', headerName: 'ID', width: 70 },\n    // { field: 'color', headerName: '', width: 2 , padding: 0, type: 'string'},\n    { field: 'date', headerName: 'Дата', type: 'string', width: 190, direction: 'desc' },\n    { field: 'text', headerName: 'Описание события', width: 230 },\n    {\n        field: 'fullName',\n        headerName: 'Пользователь',\n        description: 'This column has a value getter and is not sortable.',\n        // sortable: false,\n        width: 280,\n        // valueGetter: (params) =>\n        // `${params.getValue('text') || ''} ${params.getValue('type') || ''}`,\n    },\n    { field: 'type', headerName: 'Тип изменения', width: 280 },\n];\n\nlet rows = [\n  { id: 1, type: 'Snow', text: 'Jon', date: '35',fullName: 'Vasya' },\n  { id: 2, type: 'Lannister', text: 'Cersei', date: '42',fullName: 'Vasya' },\n  { id: 3, type: 'Lannister', text: 'Jaime', date: '45',fullName: 'Vasya' },\n  { id: 4, type: 'Stark', text: 'Arya', date: '16' ,fullName: 'Vasya'},\n  { id: 5, type: 'Targaryen', text: 'Daenerys', date: 'null',fullName: 'Vasya' },\n  { id: 6, type: 'Melisandre', text: 'null', date: '150' ,fullName: 'Vasya'},\n  { id: 7, type: 'Clifford', text: 'Ferrara', date: '44',fullName: 'Vasya' },\n  { id: 8, type: 'Frances', text: 'Rossini', date: '36',fullName: 'Vasya' },\n  { id: 9, type: 'Roxie', text: 'Harvey', date: '65',fullName: 'Vasya' },\n];\n\n\n\nconst TableList = ({ eventShortPoints, statusEventPoint,statusEnumEventPointColor }) => {\n    // console.log(statusEnumEventPointColor);\n    rows = [];\n    let nodesEvent = eventShortPoints.data.nodes;\n    if (Array.isArray(eventShortPoints.data.nodes) ) {\n      // console.log('trueee');\n      nodesEvent = _.orderBy(eventShortPoints.data.nodes, ['date'], ['desc']);\n      // console.log('eventShortPoints',nodesEvent);\n    }\n    \n    nodesEvent.map((nodeE,index) => {\n        const dateFormatt =  nodeE.date.split('T')[0].split('-')[2] + '/' + nodeE.date.split('T')[0].split('-')[1] + '/' + nodeE.date.split('T')[0].split('-')[0] + ' (' +  nodeE.date.split('T')[1].slice(0,5) + ')';\n        let newNode = { id: index, date: dateFormatt, text: nodeE.text, fullName: nodeE.user.username, type: statusEventPoint[nodeE.type]};\n        rows.push(newNode);\n        return newNode\n    });\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      {/* <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection /> */}\n      <DataGrid rows={rows} columns={columns} pageSize={5} loading={false} icons />\n      {/* {setColorRowPadding()}\n      {setColorRow()} */}\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector ({\n    eventShortPoints: selectEventShortPoints, // события короткие данные для таблицы\n    statusEventPoint: selectStatusEventPoint, // классификация статусов \"new_msg\"\n    statusEnumEventPointColor: selectStatusEnumEventPointColor, // for color elements\n  });\n  \n  \nexport default connect(mapStateToProps)(TableList);","import React,{useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport { createStructuredSelector } from 'reselect';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\n// import List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\n// import Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\n// import NotificationsIcon from '@material-ui/icons/Notifications';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\n// import { mainListItems, secondaryListItems } from './listItems';\n\n// import HistoryObjLast from './History-obj-last';\n// import NewsList from './NewsList';\n// import ChangeLog from '../../components/changeLog/ChangeLog.component';\nimport LineChartWithXAxisPading from './LineChartWithXAxisPading';\nimport Deposits from './Deposits';\nimport NewOGH from './NewOGH';\nimport Header from '../../components/header/header.component';\n\nimport TableList from './TableListHistories.sceen';\n\nimport { selectIsFetchingUserOnline } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \nimport { fetchAmountUsersForGraphicsAsync, fetchEventsPointShortAsync, fetchAmountNewEventsForGraphicAsync,fetchAmountOGHForDashboardAsync ,fetchAmountOGHToDayAsync,fetchAmountOGHToWeekAsync, fetchAmountOGHToThreeDaysAsync,fetchAmountEndEventsForGraphicAsync, fetchAmountUsersOfStartDayGraphicsAsync, fetchAmountUsersOfEndDayGraphicsAsync} from '../../store/adminPanelTrest/adminPanelTrest.actions'; \n \nimport './dashboard.styles.scss';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mggt.ru/\">\n        МосГеоТрест\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },news: {\n    '&:hover': {\n      background: \"#f00\",\n   },\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n \nconst Dashboard = ({fetchDataUsersOnline, fetchEventsPointShort, fetchAmountNewEventsForGraphic, currentUser, isFetchingUserOnline, fetchAmountOGH,fetchAmountOGHToDay,fetchAmountOGHToWeek, fetchAmountOGHToThreeDays,fetchAmountEndEventsForGraphic,fetchAmountUsersOfStartDay, fetchAmountUsersOfEndDay}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('recents');\n  const [lineHeader, setLineHeader] = React.useState('Текущая информация по событиям и пользователям');\n\n  \n  //smgt\n  useEffect(() => {\n\n    fetchEventsPointShort(); // graphic new_rec\n\n    // for \"Количество ОГХ\"\n    fetchAmountOGH();\n\n    // for \"Новые ОГХ\"\n    fetchAmountOGHToDay();\n    fetchAmountOGHToWeek(); \n    fetchAmountOGHToThreeDays();\n  }, [])\n \n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    fetchAmountNewEventsForGraphic(); // graphic new event\n    fetchDataUsersOnline(); // graphic user on line\n    fetchEventsPointShort(); // graphic new_rec\n    fetchAmountEndEventsForGraphic(); // graphic end_rec\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const winWidth = window.innerWidth;\n  \n\n  if (winWidth < 400) {\n    let newHeader = 'Информация по событиям';\n      setLineHeader(newHeader);\n  }\n  // console.log('user',user);\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            \n            <Grid item xs={12} md={8} lg={6}>\n            \n              <Paper className={fixedHeightPaper}>\n                {/* <Chart /> */}\n                <h4 style={{ textAlign:'center', position:'relative', marginTop:'-15px', left: '0'}}>\n        {lineHeader}</h4>\n                <LineChartWithXAxisPading />\n              </Paper>\n            </Grid>\n            {/* Количество ОГХ */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits /> \n              </Paper>\n            </Grid>\n            {/* Новые ОГХ */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <NewOGH />  \n              </Paper>\n            </Grid>\n            {/* История последних изменений по объектам */}\n            {/* <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <HistoryObjLast />\n              </Paper>\n            </Grid> */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <TableList />\n              </Paper>\n            </Grid>\n          </Grid>\n          <BottomNavigation style={{display:'none'}} value={value} onChange={handleChange} className={classes.root}>\n            <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n            <BottomNavigationAction label=\"Новости\" value=\"favorites\" icon={<EventNoteIcon />} />\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n            <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n          </BottomNavigation>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  isFetchingUserOnline: selectIsFetchingUserOnline,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchEventsPointShort: () => dispatch(fetchEventsPointShortAsync()),\n    fetchDataUsersOnline: (startDate, endDate) => dispatch(fetchAmountUsersForGraphicsAsync(startDate, endDate)),// for graphics\n    fetchAmountUsersOfStartDay: (startDate, endDate) => dispatch(fetchAmountUsersOfStartDayGraphicsAsync(startDate, endDate)),\n    fetchAmountUsersOfEndDay: (startDate, endDate) => dispatch(fetchAmountUsersOfEndDayGraphicsAsync(startDate, endDate)),\n    fetchAmountNewEventsForGraphic: (startDate, endDate) => dispatch(fetchAmountNewEventsForGraphicAsync(startDate, endDate)),// for graphics\n    fetchAmountEndEventsForGraphic: (startDate, endDate) => dispatch(fetchAmountEndEventsForGraphicAsync(startDate, endDate)),// for graphics\n\n    fetchAmountOGH: () => dispatch(fetchAmountOGHForDashboardAsync()),\n\n    fetchAmountOGHToDay: () => dispatch(fetchAmountOGHToDayAsync()),\n    fetchAmountOGHToWeek: () => dispatch(fetchAmountOGHToWeekAsync()),\n    fetchAmountOGHToThreeDays: () => dispatch(fetchAmountOGHToThreeDaysAsync()),\n});\n \nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard);\n","\nimport React from 'react';\n\nimport Dashboard from './Dashboard';\n\n\nconst AuthDash = () => {\n    let currentUser = {username: 'demo'};\n\n    return (\n            <Dashboard currentUser={currentUser}/>\n    )\n}\n \n  \n\n \nexport default AuthDash;\n","import React, { useState, useEffect,useCallback} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\n// import fns from 'react-date-fns';\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ru } from \"date-fns/locale\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nimport { dataStartforFetchEventsForPeriod, fetchEventFromPeriodAsync } from '../../../store/adminPanelTrest/adminPanelTrest.actions'; \nimport { fetchDataForEventShortPoints } from '../../../store/adminPanelTrest/adminPanelTrest.selectors' //'./adminPanelTrest.selectors'; \n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(4),\n    width: 200,\n  },\n}));\n\nconst initional = () => {\n    let newDate = new Date();//.toISOString().split('T')[0];\n    newDate.setDate(newDate.getDate() - 7);\n    return newDate.toISOString().split('T')[0];\n}\n\n\n\nconst DatePickers =({setDataStartforFetchEvents, fetchEventFromPeriod,dataOfFetchForEventShort}) => {\n  const [Data] = useState(initional);\n  const classes = useStyles();\n\n  \n  useEffect(() => {\n    setDataStartforFetchEvents(new Date(Data).toISOString());\n    // console.log('useEffect setDataStartforFetchEvents');\n  }, []);\n \n  const setDateOnBlur = (e) => {\n    const eT = e.target.value.toString();\n    // console.log('eT',eT);\n    // setData(eT);\n    setDataStartforFetchEvents(new Date(eT).toISOString());\n\n    let endDate   = dataOfFetchForEventShort.endDate;\n    let startDate = new Date(eT).toISOString();\n    // console.log('endDate',endDate);\n    fetchEventFromPeriod(startDate, endDate);\n  }\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"dateStart\"\n        label=\"От\"\n        type=\"date\"\n        defaultValue={Data}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        \n        onChange={setDateOnBlur}\n      />\n    </form>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  dataOfFetchForEventShort: fetchDataForEventShortPoints, \n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  // Для \n  setDataStartforFetchEvents: (startDate) => dispatch(dataStartforFetchEventsForPeriod(startDate)),\n  fetchEventFromPeriod: (start, end) => dispatch(fetchEventFromPeriodAsync(start, end)),\n});  \nexport default connect(mapStateToProps, mapDispatchToProps)(DatePickers);","import React, { useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nimport { dataEndforFetchEventsForPeriod, fetchEventFromPeriodAsync } from '../../../store/adminPanelTrest/adminPanelTrest.actions'; \nimport { fetchDataForEventShortPoints } from '../../../store/adminPanelTrest/adminPanelTrest.selectors' //'./adminPanelTrest.selectors'; \n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(4),\n    width: 200,\n  },\n}));\n\nconst initional = () => {\n    let newDate = new Date();//.toISOString().split('T')[0];\n    return newDate.toISOString().split('T')[0];\n}\n\n\n\nconst DatePickers =({setDataEndforFetchEvents, fetchEventFromPeriod,dataOfFetchForEventShort}) => {\n  const [Data] = useState(initional);\n  const classes = useStyles();\n\n\n\n  useEffect(() => {\n    setDataEndforFetchEvents(Data + 'T22:00:00.000Z');\n  }, [setDataEndforFetchEvents, Data]);\n \n  const setDate = (e) => {\n    const eT = e.target.value.toString();\n    // console.log('eT',eT);\n    // setData(eT);\n    let endDate   = eT + 'T22:00:00.000Z';//new Date(eT).toISOString();\n\n    setDataEndforFetchEvents(endDate);\n\n    let startDate = dataOfFetchForEventShort.startDate;\n    fetchEventFromPeriod(startDate, endDate);\n  }\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"date\"\n        label=\"До\"\n        type=\"date\"\n        defaultValue={Data}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={setDate}\n      />\n    </form>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  dataOfFetchForEventShort: fetchDataForEventShortPoints, \n  });\n\nconst mapDispatchToProps = (dispatch) => ({\n  setDataEndforFetchEvents: (startDate) => dispatch(dataEndforFetchEventsForPeriod(startDate)),\n  fetchEventFromPeriod: (start, end) => dispatch(fetchEventFromPeriodAsync(start, end)),\n});  \nexport default connect(mapStateToProps, mapDispatchToProps)(DatePickers);","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n// import NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n    minWidth: 185,\n  },\n}));\n\nexport default function SearchPanel({setSearchText, setField}) {\n  const classes = useStyles();\n  const [searchType, setSearchType] = React.useState('nameEvent');\n  const [filter, setFilter] = React.useState('');\n  // console.log('rerender SearchPanel');\n  const handleChange = (event) => {\n    setSearchType(event.target.value);\n    setField(event.target.value);\n    // console.log('event.target.value',event.target.value);\n  };\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n    setSearchText(event.target.value);\n    // console.log('event.target.value',event.target.value);\n  };\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"input-textbox\">Поиск</InputLabel>\n        <BootstrapInput id=\"input-textbox\" placeholder='поиск..' value={filter} onChange={handleFilter}/>\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"input-select-label\">Тип поиска</InputLabel>\n        <Select\n          labelId=\"input-select-label\"\n          id=\"input-select\"\n          value={searchType}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value='nameEvent'>Описание события</MenuItem>\n          <MenuItem value='userName'>Пользователь</MenuItem>\n          <MenuItem value='type'>Тип изменения</MenuItem>\n        </Select>\n      </FormControl>\n      \n    </div>\n  );\n}\n","'strick'\nimport React, { useEffect, useState } from 'react';\nimport _ from \"lodash\";\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { fetchEventFromPeriodAsync  } from '../../../store/adminPanelTrest/adminPanelTrest.actions'; \n\nimport { selectEventShortPoints, selectStatusEventPoint, selectStatusEnumEventPointColor, fetchDataForEventShortPoints } from '../../../store/adminPanelTrest/adminPanelTrest.selectors'; \n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(color, date, nameEvent, userName, type) {\n  return { color, date, nameEvent, userName, type };\n}\n\nlet rows = [];\n\nconst refactData = (eventShortPoints,statusEventPoint,statusEnumEventPointColor) => {\n  \n  let nodesEvent = eventShortPoints;\n  if (Array.isArray(eventShortPoints) ) {\n      nodesEvent = _.orderBy(eventShortPoints, ['date'], ['desc']);\n      \n  }\n  if (nodesEvent == null) {\n    return []\n  }\n\n  // console.log('rerender refactData');\n  rows = [];\n  nodesEvent.map((nodeE) => {\n    const dateFormatt =  nodeE.date || '02-02-2021';\n    let newNode = createData(statusEnumEventPointColor[nodeE.type], dateFormatt, nodeE.text, nodeE.user.username, statusEventPoint[nodeE.type]);\n    rows.push(newNode);\n    \n    // return newNode\n  });\n}\n\nconst TabOGH = ({ selectEventShort, statusEventPoint,statusEnumEventPointColor, fetchEventFromPeriod, datesOfFetchForEvent,searchValue, fieldValue }) => {\n  const [tabValue, settabValue] = useState([]);\n  const classes = useStyles();\n\n  console.log('rerender Tab1 : TabOGH');\n\n  useEffect(() => {\n    refactData(selectEventShort.data.nodes, statusEventPoint, statusEnumEventPointColor);\n    settabValue(rows);\n    // console.log('useEffect selectEventShort');\n  },[selectEventShort]);\n\n  useEffect(() => {\n    let {startDate, endDate}   = datesOfFetchForEvent;\n    // let startDate = datesOfFetchForEvent.startDate;\n    // console.log('endDate',endDate);\n    \n    if ( endDate !== '0' && startDate !== '0'){\n      // console.log('useEffect datesOfFetchForEvent');\n      fetchEventFromPeriod(startDate, endDate);\n    }\n    \n  },[datesOfFetchForEvent])\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{padding: '6px 0px 6px 0px', width: '2px', maxWidth: '2px'}}></TableCell>\n            <TableCell>Дата</TableCell>\n            <TableCell align=\"right\">Описание события</TableCell>\n            <TableCell align=\"right\">Пользователь</TableCell>\n            <TableCell align=\"right\">Тип изменения</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tabValue\n          .filter((item, idx) => item.[fieldValue].toLowerCase().includes(searchValue.toLowerCase()))\n          .map((row, index) => (\n            <TableRow key={index}>\n              <TableCell align=\"left\" style={{backgroundColor:row.color, padding: '6px 0px 6px 0px', width: '2px', maxWidth: '2px'}}></TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {new Date(row.date).toLocaleString('Ru').slice(0,17)}\n              </TableCell>\n              <TableCell align=\"right\">{row.nameEvent}</TableCell>\n              <TableCell align=\"right\">{row.userName}</TableCell>\n              <TableCell align=\"right\">{row.type}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n \nconst mapStateToProps = createStructuredSelector ({\n    selectEventShort: selectEventShortPoints, // события короткие данные для таблицы\n    statusEventPoint: selectStatusEventPoint, // классификация статусов \"new_msg\"\n    statusEnumEventPointColor: selectStatusEnumEventPointColor, // for color elements\n    datesOfFetchForEvent: fetchDataForEventShortPoints, //  дата начала и конца для запроса\n  });\n  \nconst mapDispatchToProps = (dispatch) => ({\n    // запрос для событий за период \n    fetchEventFromPeriod: (start,end) => dispatch(fetchEventFromPeriodAsync(start,end)),\n});  \n  export default connect(mapStateToProps,mapDispatchToProps)(TabOGH);","import React,{ useState, useCallback } from 'react';\n// import Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DatePicker from './DatePicker';\nimport DatePickerEnd from './DatePickerEnd';\nimport SearchPanel from './SearchPanel';\nimport TabOGH from './TabOGH';\n\n// import Title from './Title';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  datePick: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    color: 'rgba(0, 0, 0, 0.87)',\n    transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: '#fff',\n    padding: '10px',\n    borderRadius: '4px',\n    margin: '10px 0px',\n    boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n  }\n}));\n\nexport default function Orders() {\n  const [searchValue, setsearchValue] = useState('');\n  const [fieldValue, setFieldValue] = useState('nameEvent');\n  const classes = useStyles();\n\n  const setSearchText = useCallback((val) => {setsearchValue(val)},[]);\n  const setField = useCallback((val) => {setFieldValue(val)},[]);\n  // console.log('rerender Tab1');\n  return (\n    <React.Fragment>\n      {/* <Title>Общая статистика по событиям</Title> */}\n      <div className={classes.seeMore}>\n            <div className={classes.datePick}>\n                <SearchPanel setField={setField} setSearchText={setSearchText}/>\n                <DatePicker />\n                <DatePickerEnd />\n            </div>\n        \n            <TabOGH fieldValue={fieldValue} searchValue={searchValue}/>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(4),\n    width: 200,\n  },\n}));\n\nconst initional = () => {\n    let newDate = new Date();//.toISOString().split('T')[0];\n    newDate.setDate(newDate.getDate() - 7);\n    return newDate.toISOString().split('T')[0];\n}\n\n\n///////////////////////////////////////////////\n\n\nconst DatePickers =({setDataStart}) => {\n  const [Data] = useState(initional);\n  const classes = useStyles();\n\n  // console.log('DatePickers init');\n  \n\n  const setDate = (e) => {\n    const eT = e.target.value.toString();\n    // setData(eT);\n    setDataStart(new Date(eT).toISOString());\n  }\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"dateStart\"\n        label=\"От\"\n        type=\"date\"\n        defaultValue={Data}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={setDate}\n      />\n    </form>\n  );\n}\n\n\nexport default DatePickers;","import React, { useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(4),\n    width: 200,\n  },\n}));\n\nconst initional = () => {\n    let newDate = new Date();//.toISOString().split('T')[0];\n    return newDate.toISOString().split('T')[0];\n}\n\n\n\nconst DatePickers =({setDataEndforFetchEvents}) => {\n  const [Data] = useState(initional);\n  const classes = useStyles();\n\n  // console.log('DatePickerEnd init');\n\n  \n \n  const setDate = (e) => {\n    const eT = e.target.value.toString();\n    // setData(eT);\n    setDataEndforFetchEvents(eT);\n  }\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"date\"\n        label=\"До\"\n        type=\"date\"\n        defaultValue={Data}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={setDate}\n      />\n    </form>\n  );\n}\n\n \nexport default DatePickers;","import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend\n} from 'recharts';\n\n  \n\nclass LineChartWithXAxisPading extends PureComponent {\n//   static jsfiddleUrl = 'https://jsfiddle.net/alidingling/g03265a4/';\n \nrender() {\n    const { graphicValue} = this.props;\n    console.log('rerender LineChartWithXAxisPading');\n    \n    return (\n      <div id='graphics' style={{ position:'relative',overflow: 'hidden'}}>\n        <BarChart\n        width={1000}\n        height={300}\n        data={graphicValue}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 15,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey='Users'  name='Пользователей' stackId=\"a\" fill=\"#8884d8\" />\n        <Bar dataKey=\"Events\" name='Созданные события' stackId=\"a\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"Closed\" name='Выполнено соб-я' stackId=\"a\" fill=\"#FFc000\" />\n        <Bar dataKey=\"deny\" name='Отклоненые соб-я' stackId=\"a\" fill=\"rgb(198 76 164)\" />\n        <Bar dataKey=\"activeChat\" name='Активность чата' stackId=\"a\" fill=\"#FF0C00\" />\n      </BarChart>\n        \n        \n      </div>\n    );\n  } \n} \n\n \n// const mapStateToProps = createStructuredSelector ({\n//   countUsersGraph: selectCountUsersGraph,\n//   isFetchingUserOnline: selectIsFetchingUserOnline,\n//   selectAmountNewEvent: selectAmountEventGraph,\n//   selectAmountEndedEvent: selectAmountEndEventGraph,\n// });\n \n// const mapDispatchToProps = (dispatch) => ({\n//   fetchAmountUsersForGraphics: (startDate, endDate) => dispatch(fetchAmountUsersForGraphicsAsync(startDate, endDate)),\n//   fetchAmountNewEventsForGraphic: (startDate, endDate) => dispatch(fetchAmountNewEventsForGraphicAsync(startDate, endDate)),\n//   fetchAmountEndEventsForGraphic: (startDate, endDate) => dispatch(fetchAmountEndEventsForGraphicAsync(startDate, endDate)),\n// });\n// export default connect(mapStateToProps)(LineChartWithXAxisPading);\nexport default LineChartWithXAxisPading;\n ","import { createSelector } from 'reselect';\n\nconst getSelectPoints = (state) => state.adminPanel;\n\n\n //////////////////////////////////////////////////// \n\n// для \"- for Statics Page 2-\" ////////////////////////////////////////////////////\n\nexport const selectNewEventsGraphOfStaticPage = createSelector(\n    [getSelectPoints],\n    adminPanel => adminPanel.newEventsGraphOfStaticPage\n)\n\nexport const selectEndEventsGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.endEventsGraphOfStaticPage\n)\nexport const selectDenyEventsGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.denyEventsGraphOfStaticPage\n)\n\nexport const selectUsersOnlineGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.usersOnlineGraphOfStaticPage\n)\nexport const selectNewMessageGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.newMessageGraphOfStaticPage\n) \n\n //////////////////////////////////////////////////// \n //////////////////////////////////////////////////// \n //////////////////////////////////////////////////// \n  \n export const selectUsersNewGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.usersNewGraphOfStaticPage\n)\n\n export const selectUsersDelGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.usersDelGraphOfStaticPage\n)\n\n export const selectUsersBlockGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.usersBlockGraphOfStaticPage\n)\n\n export const selectUsersEndGraphOfStaticPage = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.usersEndGraphOfStaticPage\n)\n\n //statusEnumEventPointColor\n \n ///////////////////- for Statics Page, tab3 -///////////////////////////////// \nexport const selectAmountNewOGH = createSelector( \n    getSelectPoints,\n    adminPanel => adminPanel.amountNewOGH\n)","import React,{ useState,useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; \nimport { chunk, reduce } from 'lodash'; \n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DatePicker from './DatePicker.twoTab';\nimport DatePickerEnd from './DatePickerEnd.twoTab';\n\n// import DatePickerOne from './DatePickerOne.secondTab';\n \n\nimport LineChart from './LineChartWithXAxisPading.twoTab';\n\nimport Title from './Title.twoTab';\n\nimport './tabTwoMenu.styles.scss';\n\n//fetchAllEventsGraphicAsync(type,startDate,endDate)\n//fetchAllUsersGraphicAsync(startDate,endDate)\nimport { fetchAllEventsGraphicAsync, fetchAllUsersGraphicAsync } from '../../../store/adminPanelTrest/adminPanelTrest.actions';\n\n// selectNewEventsGraphOfStaticPage\n// selectEndEventsGraphOfStaticPage\n// selectUsersOnlineGraphOfStaticPage\n// selectNewMessageGraphOfStaticPage\n\nimport { selectNewEventsGraphOfStaticPage, selectEndEventsGraphOfStaticPage, selectDenyEventsGraphOfStaticPage, selectUsersOnlineGraphOfStaticPage, selectNewMessageGraphOfStaticPage } from '../../../store/adminPanelTrest/StatisticPage.selectors'; \n\nlet InitionalData = [\n  // {\n  //   name: '08:00', Events: 7, Users: 0, Closed: 5, activeChat: 3,\n  // },\n  // {\n  //   name: '09:00', Events: 7, Users: 0, Closed: 5, activeChat: 3,\n  // },\n  // {\n  //   name: '10:00', Events: 7, Users: 0, Closed: 5, activeChat: 4,\n  // },\n  // {\n  //   name: '11:00', Events: 7, Users: 0, Closed: 5, activeChat: 3,\n  // },\n  // {\n  //   name: '12:00', Events: 7, Users: 0, Closed: 5, activeChat: 3,\n  // },\n  // {\n  //   name: '13:00', Events: null, Users: null, Closed: null, activeChat: 14,\n  // },\n  // {\n  //   name: '14:00', Events: null, Users: null, Closed: null, activeChat: 21,\n  // },\n  // {\n  //   name: '15:00', Events: null, Users: null, Closed: null, activeChat: 21,\n  // },\n  // {\n  //   name: '16:00', Events: null, Users: null, Closed: null, activeChat: 32,\n  // },\n  // {\n  //   name: '17:00', Events: null, Users: null, Closed: null, activeChat: 30,\n  // },\n  // {\n  //   name: '18:00', Events: null, Users: null, Closed: null, activeChat: 0,\n  // },\n];\n\n\nconst initionalDateStart = () => {\n  let newDate = new Date();//.toISOString().split('T')[0];\n  newDate.setDate(newDate.getDate() - 7);\n  return newDate.toISOString().split('T')[0];\n}\n\nconst initionalDateEnd = () => {\n  let newDate = new Date();//.toISOString().split('T')[0];\n  return newDate.toISOString().split('T')[0];\n}\n\n// const monthArr = ['Янв','Фев','Мар','Апр','Май','Июн','Июл','Авг','Сен','Окт','Ноя','Дек'];\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  tabWrap: {\n    border: 'none',\n    display: 'flex',\n    fontSize: 'large',\n    marginTop: '30px',\n    padding: '10px',\n    // borderTop: '1px solid rebeccapurple',\n    boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n  },\n  tabRight: {width: '80%', display: 'flex', overflowY: 'scroll', overflowX: 'scroll', scrollbarColor: 'grey red', cursor: 'all-scroll',boxShadow: '0px 0px 10px 0px darkgrey',textAlign: 'center'},\n  tabLeft: {width: '20%', marginRight: '10px', paddingRight:'5px', paddingLeft:'15px',boxShadow: '0px 0px 10px 0px darkgrey', color: 'red'},\n  datePick: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    color: 'rgba(0, 0, 0, 0.87)',\n    transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: '#fff',\n    padding: '10px',\n    borderRadius: '4px',\n    margin: '10px 0px',\n    boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nlet tmpGraphicValue = '';\nlet tmpAmountEvents = 0;\n\nconst TabTwoMenu = ({fetchAllEventsGraphic, fetchAllUsersGraphic, newEventsGraphOfStaticPage, endEventsGraphOfStaticPage, selectDenyEvents, usersOnlineGraphOfStaticPage, newMessageGraphOfStaticPage})=> {\n  const [graphicValue, setGraphicValue] = useState('');\n  const [dateWidth, setDateWidth] = useState(1);\n  const [dateStart, setDateStart] = useState(initionalDateStart);\n  const [dateEnd, setDateEnd] = useState(initionalDateEnd);\n  const classes = useStyles();\n\n  // console.log('TabTwoMenu init');\n  // console.log('TabTwoMenu dateWidth', dateWidth);\n  const setDateStartFromPicker = (date) => {setDateStart(date)};\n  const setDateEndFromPicker = (date) => {setDateEnd(date)};\n\n  const daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  }\n \n\n   \n  useEffect(() => {\n\n    const d1 = new Date(dateStart).getDate();\n    const d2 = new Date(dateEnd).getDate();\n    const deltaDate = +d2 - +d1;\n    setDateWidth(deltaDate);\n    // console.log('deltaDate',deltaDate);\n    const dateEndPlus = dateEnd + 'T18:00:00.000Z';\n    fetchAllUsersGraphic(dateStart, dateEndPlus);\n    fetchAllEventsGraphic('new_rec', dateStart, dateEndPlus);\n    fetchAllEventsGraphic('done_rec', dateStart, dateEndPlus);\n    fetchAllEventsGraphic('deny_rec', dateStart, dateEndPlus);\n    fetchAllEventsGraphic('new_msg', dateStart, dateEndPlus);\n \n  }, [dateStart, dateEnd, fetchAllUsersGraphic,fetchAllEventsGraphic]);\n \n  const setUserData = (usersLine=[]) => {\n    let maxUsersOfDay = [];\n    const chunkUsers = chunk(usersLine,24); \n\n    for (let index = 0; index < chunkUsers.length; index++) {\n      \n      let max_of_array = Math.max.apply(Math, chunkUsers[index]);\n      maxUsersOfDay.push(max_of_array);\n      \n    }\n    // console.log('maxUsersOfDay',maxUsersOfDay); \n\n    let me1 = new Date(dateStart).getMonth() + 1;\n    let y1 = new Date(dateStart).getYear();\n    const dOm = daysInMonth(me1, y1);\n    \n    InitionalData = [];\n    maxUsersOfDay.forEach((el,index) => {\n        let d1 = new Date(dateStart).getDate() + index;\n        if ( d1 > dOm +1) {\n          d1 -= dOm;\n        }\n        let m1 = new Date(dateStart).getMonth() + 1;\n        m1 = m1 < 10 ? '0' + m1: m1;\n        \n        let y1 = new Date(dateStart).getFullYear();\n        const nameDM = d1 + '/' + m1 + '/' + y1;\n        const newObj = {\n          name: nameDM, Events: 0, Users: el, Closed: 0, deny: 0, activeChat: 0,\n        }; \n        // InitionalData[index] = newObj; \n        InitionalData.push(newObj); \n    });\n\n    // setGraphicValue(InitionalData);\n    tmpGraphicValue = InitionalData;\n  }\n\n  //////////////////////////\n  const setNewEventData = (usersLine=[]) => {\n    let maxUsersOfDay = [];\n    const chunkUsers = chunk(usersLine,24); \n\n    for (let index = 0; index < chunkUsers.length; index++) {\n      // let max_of_array = Math.max.apply(Math, chunkUsers[index]);\n      let sum_of_array = reduce(chunkUsers[index],(sum,n) => (sum + n),0);// Math.max.apply(Math, chunkUsers[index]);\n      // console.log('sum_of array',sum_of_array);\n      maxUsersOfDay.push(sum_of_array);\n      \n    }\n\n    maxUsersOfDay.forEach((el,index) => {\n        \n      const newObj = {...InitionalData[index],  Events: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj; \n    });\n\n    // setGraphicValue(InitionalData);\n    tmpGraphicValue = InitionalData;\n  }\n  \n  const setEndEventData = (usersLine=[]) => {\n    let maxUsersOfDay = [];\n    const chunkUsers = chunk(usersLine,24); \n\n    for (let index = 0; index < chunkUsers.length; index++) {\n      let sum_of_array = reduce(chunkUsers[index],(sum,n) => (sum + n),0);// Math.max.apply(Math, chunkUsers[index]);\n      // console.log('sum_of array',sum_of_array);\n      maxUsersOfDay.push(sum_of_array);\n      \n    } \n    maxUsersOfDay.forEach((el,index) => {\n      const newObj = {...InitionalData[index],  Closed: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj; \n    });\n    // setGraphicValue(InitionalData);\n    tmpGraphicValue = InitionalData;\n  }\n  \n  const setDenyEventData = (denyEvents=[]) => {\n    let maxUsersOfDay = [];\n    const chunkUsers = chunk(denyEvents,24); \n\n    for (let index = 0; index < chunkUsers.length; index++) {\n      let sum_of_array = reduce(chunkUsers[index],(sum,n) => (sum + n),0);// Math.max.apply(Math, chunkUsers[index]);\n      // console.log('sum_of array',sum_of_array);\n      maxUsersOfDay.push(sum_of_array);\n      \n    } \n    maxUsersOfDay.forEach((el,index) => {\n      const newObj = {...InitionalData[index],  deny: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj; \n    });\n    // setGraphicValue(InitionalData);\n    tmpGraphicValue = InitionalData;\n  }\n  \n  const setNewMessagesData = (usersLine=[]) => {\n    let maxUsersOfDay = [];\n    const chunkUsers = chunk(usersLine,24); \n\n    for (let index = 0; index < chunkUsers.length; index++) {\n      \n      let sum_of_array = reduce(chunkUsers[index],(sum,n) => (sum + n),0);// Math.max.apply(Math, chunkUsers[index]);\n      // console.log('sum_of array',sum_of_array);\n      maxUsersOfDay.push(sum_of_array);\n      \n    }\n    maxUsersOfDay.forEach((el,index) => {\n        \n      const newObj = {...InitionalData[index],  activeChat: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj; \n    });\n\n    tmpGraphicValue = InitionalData;\n    setGraphicValue(tmpGraphicValue);\n  }\n\n  // for one day ///////////////////////////////////\n\n  const setUserOfOneDate = (usersLine=[]) => {\n    let maxUsersOfDay = usersLine.slice(8);\n\n    InitionalData = [];\n    maxUsersOfDay.forEach((el,index) => {\n        let d1 = 8 + index;\n        \n        const m1 = '00';\n        const nameDM = d1 + ':' + m1;\n        const newObj = {\n          name: nameDM, Events: 0, Users: el, Closed: 0, deny: 0, activeChat: 0,\n        }; \n        // InitionalData[index] = newObj; \n        InitionalData.push(newObj); \n    });\n\n    setGraphicValue(InitionalData);\n  }\n  \n\n  const setNewEventOfOneDay = (newEvent=[]) => {\n    let maxUsersOfDay = newEvent.slice(8);\n\n    \n    maxUsersOfDay.forEach((el,index) => {\n         \n        const newObj = {...InitionalData[index],  Events: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj;\n    });\n\n    setGraphicValue(InitionalData);\n  }\n\n  const setEndEventOfOneDay = (endEvent=[]) => {\n    let maxUsersOfDay = endEvent.slice(8);\n\n    \n    maxUsersOfDay.forEach((el,index) => {\n         \n        const newObj = {...InitionalData[index],  Closed: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj;\n    });\n\n    setGraphicValue(InitionalData);\n  }\n\n  const setDenyEventOfOneDay = (denyEvent=[]) => {\n    let maxUsersOfDay = denyEvent.slice(8);\n\n    \n    maxUsersOfDay.forEach((el,index) => {\n         \n        const newObj = {...InitionalData[index],  deny: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj;\n    });\n\n    setGraphicValue(InitionalData);\n  }\n  \n  const setNewMessageOfOneDay = (newMess=[]) => {\n    let maxUsersOfDay = newMess.slice(8);\n\n    \n    maxUsersOfDay.forEach((el,index) => {\n         \n        const newObj = {...InitionalData[index],  activeChat: el}; \n        // const newObj = {name: nameDM, Events: 0, Users: el, Closed: 0, activeChat: 0,}; \n        InitionalData[index] = newObj;\n    });\n\n    setGraphicValue(InitionalData);\n  }\n\n\n  const amountEventSelects = () => {\n    tmpAmountEvents += 1;\n    \n    if(tmpAmountEvents === 5 ){\n      setDataEvants()\n    }\n    \n  };\n\n  const setDataEvants =() => {\n    const usersLine = usersOnlineGraphOfStaticPage.data.chartData;\n    const newEvent = newEventsGraphOfStaticPage.data.chartData;\n    const endEvent = endEventsGraphOfStaticPage.data.chartData;\n    const denyEvent = selectDenyEvents.data.chartData;\n    const newMess = newMessageGraphOfStaticPage.data.chartData;\n\n    if (dateWidth){\n      setUserData(usersLine);\n      setNewEventData(newEvent);\n      setEndEventData(endEvent);\n      setDenyEventData(denyEvent);\n      setNewMessagesData(newMess);\n    } else {\n      // set of one day\n      // setUserOfOneDate(usersLine);\n      // setNewEventOfOneDay(newEvent);\n      // setEndEventOfOneDay(endEvent);\n      // setDenyEventOfOneDay(denyEvent);\n      // setNewMessageOfOneDay(newMess);\n\n\n    }\n  }\n  useEffect(() => {\n    \n    amountEventSelects();\n\n    // console.log('rerender useEffect: TabTwoMenu');\n    \n  }, [usersOnlineGraphOfStaticPage,newEventsGraphOfStaticPage, endEventsGraphOfStaticPage,newMessageGraphOfStaticPage, selectDenyEvents])\n \n  return (\n    <React.Fragment>\n      {/* <Title>Статистика по событиям за периоды</Title> */}\n      <div className={classes.seeMore}>\n            <div className={classes.datePick}>\n                {/* <DatePickerOne setDataStart={setDateStartFromPicker}/> */}\n                <DatePicker setDataStart={setDateStartFromPicker}/>\n                <DatePickerEnd setDataEndforFetchEvents={setDateEndFromPicker}/>\n            </div>\n            <LineChart  graphicValue={graphicValue}/>\n            <div className={classes.tabWrap}  >\n\n\n              <TableContainer component={Paper}>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Дата(время)</TableCell>\n                      <TableCell align=\"right\">Новые события</TableCell>\n                      <TableCell align=\"right\">Пользователи он-лайн</TableCell>\n                      <TableCell align=\"right\">Закрытые события</TableCell>\n                      <TableCell align=\"right\">Отмененые события</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {graphicValue && graphicValue.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell component=\"th\" scope=\"row\">\n                        {item.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{item.Events}</TableCell>\n                        <TableCell align=\"right\">{item.Users}</TableCell>\n                        <TableCell align=\"right\">{item.Closed}</TableCell>\n                        <TableCell align=\"right\">{item.deny}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n              {/* <div className='listTab tabLeft'><div>Дата(время)</div><div>Новые события</div><div>Пользователи он-лайн</div><div>Закрытые события</div><div>Отмененые события</div> </div>\n              <div className={classes.tabRight} >\n                {graphicValue && graphicValue.map((item, index) => {\n                  return <li key={index}  className='listTab' ><div>{item.name}</div><div>{item.Events}</div><div>{item.Users}</div><div>{item.Closed}</div><div>{item.deny}</div></li>\n                })}\n              </div>  */}\n            </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\n\nconst mapStateToProps = createStructuredSelector ({\n  newEventsGraphOfStaticPage: selectNewEventsGraphOfStaticPage, // события короткие данные для таблицы\n  endEventsGraphOfStaticPage: selectEndEventsGraphOfStaticPage, // классификация статусов \"new_msg\"\n  selectDenyEvents: selectDenyEventsGraphOfStaticPage, // классификация статусов \"new_msg\"\n  usersOnlineGraphOfStaticPage: selectUsersOnlineGraphOfStaticPage, // for color elements\n  newMessageGraphOfStaticPage: selectNewMessageGraphOfStaticPage, //  дата начала и конца для запроса\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllEventsGraphic: (type, startDate, endDate) => dispatch(fetchAllEventsGraphicAsync(type, startDate, endDate)),\n  fetchAllUsersGraphic: (startDate, endDate) => dispatch(fetchAllUsersGraphicAsync(startDate, endDate)),\n  \n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TabTwoMenu);","import React, { useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(4),\n    width: 200,\n  },\n}));\n\nconst initional = () => {\n    let newDate = new Date();//.toISOString().split('T')[0];\n    newDate.setDate(newDate.getDate() - 7);\n    return newDate.toISOString().split('T')[0];\n}\n\n\n///////////////////////////////////////////////\n\n\nconst DatePickers =({setDataStart}) => {\n  const [Data] = useState(initional);\n  const classes = useStyles();\n\n  // console.log('DatePickers init');\n  \n\n  const setDate = (e) => {\n    const eT = e.target.value.toString();\n    // setData(eT);\n    setDataStart(new Date(eT).toISOString());\n  }\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"dateStart\"\n        label=\"Дата начала диапозона\"\n        type=\"date\"\n        defaultValue={Data}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={setDate}\n      />\n    </form>\n  );\n}\n\n\nexport default DatePickers;","import React, { useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(4),\n    width: 200,\n  },\n}));\n\nconst initional = () => {\n    let newDate = new Date();//.toISOString().split('T')[0];\n    return newDate.toISOString().split('T')[0];\n}\n\n\n\nconst DatePickers =({setDataEndforFetchEvents}) => {\n  const [Data] = useState(initional);\n  const classes = useStyles();\n\n  // console.log('DatePickerEnd init');\n\n  \n \n  const setDate = (e) => {\n    const eT = e.target.value.toString();\n    // setData(eT);\n    setDataEndforFetchEvents(eT);\n  }\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"date\"\n        label=\"Дата начала диапозона\"\n        type=\"date\"\n        defaultValue={Data}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={setDate}\n      />\n    </form>\n  );\n}\n\n \nexport default DatePickers;","import React from 'react'\nimport { Doughnut } from 'react-chartjs-2'\n\n\nlet data = {\n  labels: ['В разработке ОГХ МГГТ', 'ОГХ смежников'],\n  datasets: [\n    {\n      label: '# Объектов',\n      data: [12, 19],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n}\n\nconst DoughnutChart = ({dataArr}) => {\n    // console.log('dataArr',dataArr);\n    data.datasets[0].data = dataArr;\n    data.labels[0] = 'В разработке ОГХ МГГТ (' + dataArr[0] +')';\n    data.labels[1] = 'ВОГХ смежников (' + dataArr[1] +')';\n\n    return (\n        <>\n          <Doughnut data={data} />\n        </>\n      )\n}\n\nexport default DoughnutChart","import React,{ useState,useEffect, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; \n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DatePicker from './DatePicker.thirdTab';\nimport DatePickerEnd from './DatePickerEnd.thirdTab';\n \nimport ColomsChart from './ColomsChart';\n\nimport Title from './Title.thirdTab'; \n\nimport { fetchNewOGHThirdTabStaticPageGraphicAsync } from '../../../store/adminPanelTrest/adminPanelTrest.actions';\n\nimport { selectAmountNewOGH } from '../../../store/adminPanelTrest/StatisticPage.selectors'; \n\nconst dataChar = [3,3];\n\nconst initionalDateStart = () => {\n  let newDate = new Date();//.toISOString().split('T')[0];\n  newDate.setDate(newDate.getDate() - 7);\n  return newDate.toISOString().split('T')[0];\n}\n\nconst initionalDateEnd = () => {\n  let newDate = new Date();//.toISOString().split('T')[0];\n  return newDate.toISOString().split('T')[0];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  datePick: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    color: 'rgba(0, 0, 0, 0.87)',\n    transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: '#fff',\n    padding: '10px',\n    borderRadius: '4px',\n    margin: '10px 0px',\n    boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\n  }\n}));\n\n\n\nconst TabThirdMenu = ({ fetchNewOGH, selectAmountNewOGH })=> {\n  const [graphicValue, setGraphicValue] = useState('');\n  const [dateStart, setDateStart] = useState(initionalDateStart);\n  const [dateEnd, setDateEnd] = useState(initionalDateEnd);\n  const classes = useStyles();\n\n  const setDateStartFromPicker = useCallback((date) => {setDateStart(date)},[]);\n  const setDateEndFromPicker = useCallback((date) => {setDateEnd(date)},[]);\n\n  // const daysInMonth = (month, year) => {\n  //   return new Date(year, month, 0).getDate();\n  // }\n  // console.log('rerender Tab3');\n \n  useEffect(() => {\n    // console.log('deltaDate',deltaDate);\n    const dateEndPlus = dateEnd + 'T18:00:00.000Z';\n    fetchNewOGH('new_obj', dateStart, dateEndPlus);\n  }, [dateStart, dateEnd, fetchNewOGH]);\n\n  // for one day ///////////////////////////////////\n\n  useEffect(() => {\n    const newOGH = selectAmountNewOGH.data.objMgtt;\n    const newOGHRelatives = selectAmountNewOGH.data.objRelatives;\n    const DataOGH = [newOGH,newOGHRelatives];\n    setGraphicValue(DataOGH);\n\n  },[selectAmountNewOGH])\n \n  return (\n    <React.Fragment>\n      {/* <Title>Статистика по ОГХ за период</Title> */}\n      <div className={classes.seeMore}>\n            <div className={classes.datePick}>\n                <DatePicker setDataStart={setDateStartFromPicker}/>\n                <DatePickerEnd setDataEndforFetchEvents={setDateEndFromPicker}/>\n            </div>\n            <ColomsChart dataArr={graphicValue} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  selectAmountNewOGH: selectAmountNewOGH, // \n});\n \nconst mapDispatchToProps = (dispatch) => ({\n  fetchNewOGH: (type, startDate, endDate) => dispatch(fetchNewOGHThirdTabStaticPageGraphicAsync(type, startDate, endDate)),\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabThirdMenu);\n\n","import React, { useState} from 'react';\nimport PropTypes from 'prop-types';\n\n\n// import { connect } from 'react-redux';\n// import { createStructuredSelector } from 'reselect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\n\n// import TabOGH from './TabOGH'\nimport TabOneMenu from './FirstTab/tabOneMenu'\nimport TabTwoMenu from './TwoTab/tabTwoMenu'\nimport TabThirdMenu from './ThirdTab/tabThirdMenu'\n\n\n// import { fetchEventForPeriodAsync } from '../../store/adminPanelTrest/adminPanelTrest.actions'; \n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst TabMenu = ({fetchEventForPeriod}) => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    // console.log(newValue); \n  };\n\n \n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Статистика по событиям\" {...a11yProps(0)} />\n          <Tab label=\"Статистика по системы\" {...a11yProps(1)} />\n          <Tab label=\"Статистика по ОГХ\" {...a11yProps(2)} />\n          {/* <Tab label=\"Пользователи онлайн\" {...a11yProps(3)} /> */}\n        </Tabs>\n      </AppBar>\n      <TabPanel   value={value} index={0}>\n          <TabOneMenu />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n          <TabTwoMenu />\n      </TabPanel> \n      <TabPanel value={value} index={2}>\n      <TabThirdMenu />\n      </TabPanel>\n      {/* <TabPanel value={value} index={3}>\n      таб 4\n      </TabPanel> */}\n    </div>\n  );\n}\n\n\n\n\n// const mapStateToProps = createStructuredSelector ({\n//     eventShortPoints: selectEventShortPoints, // события короткие данные для таблицы\n//     statusEventPoint: selectStatusEventPoint, // классификация статусов \"new_msg\"\n//     statusEnumEventPointColor: selectStatusEnumEventPointColor, // for color elements\n//   });\n  \n// const mapDispatchToProps = (dispatch) => ({\n//     // Для событий новых и закрытых\n//     fetchEventForPeriod: (startDate, endDate) => dispatch(fetchEventForPeriodAsync(startDate, endDate)),\n// });  \n\nexport default TabMenu;\n\n  // export default connect(null, mapDispatchToProps)(TabMenu);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\n\nimport Header from '../../components/header/header.component';\nimport TabMenu from './TabMenu'\n\nimport './historyChanges.styles.scss';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mggt.ru/\">\n        МосГеоТрест\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n \nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  \n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n//<HistoryChanges eventShortPoints={eventShortPoints}/>\n\nexport default function HistoryChanges({eventShortPoints}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            \n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <TabMenu />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","\nimport React from 'react';\n// import { connect } from 'react-redux';\n\n// import { selectEventShortPoints } from '../../store/adminPanelTrest/adminPanelTrest.selectors'; \n\nimport HistoryChanges from './HistoryChanges';\n\n\n \nconst HistoryPage = ({eventShortPoints}) => {\n     \n    // console.log('HistoryChanges', eventShortPoints);\n    return (\n            <HistoryChanges />\n    )\n}\n \n \n// const mapStateToProps = () => ({\n//     eventShortPoints: selectEventShortPoints(),\n// });\n\n// export default connect(mapStateToProps)(HistoryPage);\nexport default HistoryPage;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport Dashboard from './screens/dashboard'; \nimport HistoriesChange from './screens/historyChanges/index'; \n//glav control\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/ogh\">\n            <HistoriesChange />\n          </Route>\n          <Route path=\"/stats\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/stats/ogh\">\n            <HistoriesChange />\n          </Route>\n          <Route >\n            <Dashboard />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n \nimport { store, persistor} from './store';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n  \nReactDOM.render( \n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n          <App />\n      </PersistGate>\n    </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}